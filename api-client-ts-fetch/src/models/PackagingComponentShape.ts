/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The shape property is canonicalized using the packaging_shapes taxonomy.
 * @export
 * @interface PackagingComponentShape
 */
export interface PackagingComponentShape {
    /**
     * Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon.
     * @type {string}
     * @memberof PackagingComponentShape
     */
    id?: string;
    /**
     * Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon.
     * @type {string}
     * @memberof PackagingComponentShape
     */
    lcName?: string;
}

/**
 * Check if a given object implements the PackagingComponentShape interface.
 */
export function instanceOfPackagingComponentShape(value: object): value is PackagingComponentShape {
    return true;
}

export function PackagingComponentShapeFromJSON(json: any): PackagingComponentShape {
    return PackagingComponentShapeFromJSONTyped(json, false);
}

export function PackagingComponentShapeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackagingComponentShape {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'lcName': json['lc_name'] == null ? undefined : json['lc_name'],
    };
}

export function PackagingComponentShapeToJSON(value?: PackagingComponentShape | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'lc_name': value['lcName'],
    };
}

