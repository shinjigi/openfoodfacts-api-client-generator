/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductBase } from './ProductBase';
import {
    ProductBaseFromJSON,
    ProductBaseFromJSONTyped,
    ProductBaseToJSON,
} from './ProductBase';

/**
 * 
 * @export
 * @interface GetProductBaseByBarcodeResponse
 */
export interface GetProductBaseByBarcodeResponse {
    /**
     * Barcode of the product
     * (can be EAN-13 or internal codes for some food stores).
     * For products without a barcode, Open Food Facts assigns a 
     * number starting with the 200 reserved prefix.
     * 
     * @type {string}
     * @memberof GetProductBaseByBarcodeResponse
     */
    code?: string;
    /**
     * 
     * @type {number}
     * @memberof GetProductBaseByBarcodeResponse
     */
    status?: number;
    /**
     * 
     * @type {string}
     * @memberof GetProductBaseByBarcodeResponse
     */
    statusVerbose?: string;
    /**
     * 
     * @type {ProductBase}
     * @memberof GetProductBaseByBarcodeResponse
     */
    product?: ProductBase;
}

/**
 * Check if a given object implements the GetProductBaseByBarcodeResponse interface.
 */
export function instanceOfGetProductBaseByBarcodeResponse(value: object): value is GetProductBaseByBarcodeResponse {
    return true;
}

export function GetProductBaseByBarcodeResponseFromJSON(json: any): GetProductBaseByBarcodeResponse {
    return GetProductBaseByBarcodeResponseFromJSONTyped(json, false);
}

export function GetProductBaseByBarcodeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProductBaseByBarcodeResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'] == null ? undefined : json['code'],
        'status': json['status'] == null ? undefined : json['status'],
        'statusVerbose': json['status_verbose'] == null ? undefined : json['status_verbose'],
        'product': json['product'] == null ? undefined : ProductBaseFromJSON(json['product']),
    };
}

export function GetProductBaseByBarcodeResponseToJSON(value?: GetProductBaseByBarcodeResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': value['code'],
        'status': value['status'],
        'status_verbose': value['statusVerbose'],
        'product': ProductBaseToJSON(value['product']),
    };
}

