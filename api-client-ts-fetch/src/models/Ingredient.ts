/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Ingredient
 */
export interface Ingredient {
    /**
     * 
     * @type {string}
     * @memberof Ingredient
     */
    id?: string;
    /**
     * Sub ingredients composing this ingredients.
     * 
     * @type {Array<Ingredient>}
     * @memberof Ingredient
     */
    ingredients?: Array<Ingredient>;
    /**
     * 
     * @type {number}
     * @memberof Ingredient
     */
    percent?: number;
    /**
     * 
     * @type {number}
     * @memberof Ingredient
     */
    percentEstimate?: number;
    /**
     * 
     * @type {number}
     * @memberof Ingredient
     */
    percentMax?: number;
    /**
     * 
     * @type {number}
     * @memberof Ingredient
     */
    percentMin?: number;
    /**
     * 
     * @type {string}
     * @memberof Ingredient
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof Ingredient
     */
    vegan?: string;
    /**
     * 
     * @type {string}
     * @memberof Ingredient
     */
    vegetarian?: string;
}

/**
 * Check if a given object implements the Ingredient interface.
 */
export function instanceOfIngredient(value: object): value is Ingredient {
    return true;
}

export function IngredientFromJSON(json: any): Ingredient {
    return IngredientFromJSONTyped(json, false);
}

export function IngredientFromJSONTyped(json: any, ignoreDiscriminator: boolean): Ingredient {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'ingredients': json['ingredients'] == null ? undefined : ((json['ingredients'] as Array<any>).map(IngredientFromJSON)),
        'percent': json['percent'] == null ? undefined : json['percent'],
        'percentEstimate': json['percent_estimate'] == null ? undefined : json['percent_estimate'],
        'percentMax': json['percent_max'] == null ? undefined : json['percent_max'],
        'percentMin': json['percent_min'] == null ? undefined : json['percent_min'],
        'text': json['text'] == null ? undefined : json['text'],
        'vegan': json['vegan'] == null ? undefined : json['vegan'],
        'vegetarian': json['vegetarian'] == null ? undefined : json['vegetarian'],
    };
}

export function IngredientToJSON(value?: Ingredient | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'ingredients': value['ingredients'] == null ? undefined : ((value['ingredients'] as Array<any>).map(IngredientToJSON)),
        'percent': value['percent'],
        'percent_estimate': value['percentEstimate'],
        'percent_max': value['percentMax'],
        'percent_min': value['percentMin'],
        'text': value['text'],
        'vegan': value['vegan'],
        'vegetarian': value['vegetarian'],
    };
}

