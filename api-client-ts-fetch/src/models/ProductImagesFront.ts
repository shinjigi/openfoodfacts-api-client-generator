/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductImagesFrontSizes } from './ProductImagesFrontSizes';
import {
    ProductImagesFrontSizesFromJSON,
    ProductImagesFrontSizesFromJSONTyped,
    ProductImagesFrontSizesToJSON,
} from './ProductImagesFrontSizes';

/**
 * property of an image (or part thereof) selected for a particular role and a particular language.
 * 
 * @export
 * @interface ProductImagesFront
 */
export interface ProductImagesFront {
    /**
     * The angle of the image rotation (if it was rotated).
     * @type {number}
     * @memberof ProductImagesFront
     */
    angle?: number;
    /**
     * 
     * @type {string}
     * @memberof ProductImagesFront
     */
    coordinatesImageSize?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductImagesFront
     */
    geometry?: string;
    /**
     * The id of the original/source image that was selected to edit(rotate, normalize etc) to produce this new image.
     * @type {string}
     * @memberof ProductImagesFront
     */
    imgid?: string;
    /**
     * Normalize colors.
     * @type {any}
     * @memberof ProductImagesFront
     */
    normalize?: any | null;
    /**
     * 
     * @type {string}
     * @memberof ProductImagesFront
     */
    rev?: string;
    /**
     * 
     * @type {ProductImagesFrontSizes}
     * @memberof ProductImagesFront
     */
    sizes?: ProductImagesFrontSizes;
    /**
     * Photo on white background : Try to remove the background.
     * 
     * @type {any}
     * @memberof ProductImagesFront
     */
    whiteMagic?: any | null;
    /**
     * 
     * @type {string}
     * @memberof ProductImagesFront
     */
    x1?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductImagesFront
     */
    x2?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductImagesFront
     */
    y1?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductImagesFront
     */
    y2?: string;
}

/**
 * Check if a given object implements the ProductImagesFront interface.
 */
export function instanceOfProductImagesFront(value: object): value is ProductImagesFront {
    return true;
}

export function ProductImagesFrontFromJSON(json: any): ProductImagesFront {
    return ProductImagesFrontFromJSONTyped(json, false);
}

export function ProductImagesFrontFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductImagesFront {
    if (json == null) {
        return json;
    }
    return {
        
        'angle': json['angle'] == null ? undefined : json['angle'],
        'coordinatesImageSize': json['coordinates_image_size'] == null ? undefined : json['coordinates_image_size'],
        'geometry': json['geometry'] == null ? undefined : json['geometry'],
        'imgid': json['imgid'] == null ? undefined : json['imgid'],
        'normalize': json['normalize'] == null ? undefined : json['normalize'],
        'rev': json['rev'] == null ? undefined : json['rev'],
        'sizes': json['sizes'] == null ? undefined : ProductImagesFrontSizesFromJSON(json['sizes']),
        'whiteMagic': json['white_magic'] == null ? undefined : json['white_magic'],
        'x1': json['x1'] == null ? undefined : json['x1'],
        'x2': json['x2'] == null ? undefined : json['x2'],
        'y1': json['y1'] == null ? undefined : json['y1'],
        'y2': json['y2'] == null ? undefined : json['y2'],
    };
}

export function ProductImagesFrontToJSON(value?: ProductImagesFront | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'angle': value['angle'],
        'coordinates_image_size': value['coordinatesImageSize'],
        'geometry': value['geometry'],
        'imgid': value['imgid'],
        'normalize': value['normalize'],
        'rev': value['rev'],
        'sizes': ProductImagesFrontSizesToJSON(value['sizes']),
        'white_magic': value['whiteMagic'],
        'x1': value['x1'],
        'x2': value['x2'],
        'y1': value['y1'],
        'y2': value['y2'],
    };
}

