/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductMetaSourceFieldsOrgGs1
 */
export interface ProductMetaSourceFieldsOrgGs1 {
    /**
     * 
     * @type {string}
     * @memberof ProductMetaSourceFieldsOrgGs1
     */
    gln?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductMetaSourceFieldsOrgGs1
     */
    gpcCategoryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductMetaSourceFieldsOrgGs1
     */
    gpcCategoryName?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductMetaSourceFieldsOrgGs1
     */
    isAllergenRelevantDataProvided?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductMetaSourceFieldsOrgGs1
     */
    lastChangeDateTime?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductMetaSourceFieldsOrgGs1
     */
    partyName?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductMetaSourceFieldsOrgGs1
     */
    productionVariantDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductMetaSourceFieldsOrgGs1
     */
    publicationDateTime?: string;
}

/**
 * Check if a given object implements the ProductMetaSourceFieldsOrgGs1 interface.
 */
export function instanceOfProductMetaSourceFieldsOrgGs1(value: object): value is ProductMetaSourceFieldsOrgGs1 {
    return true;
}

export function ProductMetaSourceFieldsOrgGs1FromJSON(json: any): ProductMetaSourceFieldsOrgGs1 {
    return ProductMetaSourceFieldsOrgGs1FromJSONTyped(json, false);
}

export function ProductMetaSourceFieldsOrgGs1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductMetaSourceFieldsOrgGs1 {
    if (json == null) {
        return json;
    }
    return {
        
        'gln': json['gln'] == null ? undefined : json['gln'],
        'gpcCategoryCode': json['gpcCategoryCode'] == null ? undefined : json['gpcCategoryCode'],
        'gpcCategoryName': json['gpcCategoryName'] == null ? undefined : json['gpcCategoryName'],
        'isAllergenRelevantDataProvided': json['isAllergenRelevantDataProvided'] == null ? undefined : json['isAllergenRelevantDataProvided'],
        'lastChangeDateTime': json['lastChangeDateTime'] == null ? undefined : json['lastChangeDateTime'],
        'partyName': json['partyName'] == null ? undefined : json['partyName'],
        'productionVariantDescription': json['productionVariantDescription'] == null ? undefined : json['productionVariantDescription'],
        'publicationDateTime': json['publicationDateTime'] == null ? undefined : json['publicationDateTime'],
    };
}

export function ProductMetaSourceFieldsOrgGs1ToJSON(value?: ProductMetaSourceFieldsOrgGs1 | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'gln': value['gln'],
        'gpcCategoryCode': value['gpcCategoryCode'],
        'gpcCategoryName': value['gpcCategoryName'],
        'isAllergenRelevantDataProvided': value['isAllergenRelevantDataProvided'],
        'lastChangeDateTime': value['lastChangeDateTime'],
        'partyName': value['partyName'],
        'productionVariantDescription': value['productionVariantDescription'],
        'publicationDateTime': value['publicationDateTime'],
    };
}

