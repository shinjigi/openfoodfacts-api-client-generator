/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TableColumn } from './TableColumn';
import {
    TableColumnFromJSON,
    TableColumnFromJSONTyped,
    TableColumnToJSON,
} from './TableColumn';

/**
 * Element to display a table.
 * @export
 * @interface TableElement
 */
export interface TableElement {
    /**
     * An id for the table.
     * @type {string}
     * @memberof TableElement
     */
    id?: string;
    /**
     * Title of the column.
     * 
     * @type {string}
     * @memberof TableElement
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof TableElement
     */
    rows?: string;
    /**
     * 
     * @type {Array<TableColumn>}
     * @memberof TableElement
     */
    columns?: Array<TableColumn>;
}

/**
 * Check if a given object implements the TableElement interface.
 */
export function instanceOfTableElement(value: object): value is TableElement {
    return true;
}

export function TableElementFromJSON(json: any): TableElement {
    return TableElementFromJSONTyped(json, false);
}

export function TableElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): TableElement {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'rows': json['rows'] == null ? undefined : json['rows'],
        'columns': json['columns'] == null ? undefined : ((json['columns'] as Array<any>).map(TableColumnFromJSON)),
    };
}

export function TableElementToJSON(value?: TableElement | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'title': value['title'],
        'rows': value['rows'],
        'columns': value['columns'] == null ? undefined : ((value['columns'] as Array<any>).map(TableColumnToJSON)),
    };
}

