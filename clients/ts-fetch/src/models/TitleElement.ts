/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * The title of a panel.
 * @export
 * @interface TitleElement
 */
export interface TitleElement {
  /**
   * A short name of this panel, not including any actual values
   * @type {string}
   * @memberof TitleElement
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof TitleElement
   */
  title?: string;
  /**
   * Used to indicate how the value of this item is measured, such as "grade" for Nutri-Score and Eco-Score or "percentage" for Salt
   * @type {string}
   * @memberof TitleElement
   */
  type?: TitleElementTypeEnum;
  /**
   * The value for this panel where it corresponds to a A to E grade such as the Nutri-Score of the Eco-Score.
   * @type {string}
   * @memberof TitleElement
   */
  grade?: TitleElementGradeEnum;
  /**
   * The numeric value of the panel, where the type is "percentage"
   * @type {number}
   * @memberof TitleElement
   */
  value?: number;
  /**
   *
   * @type {string}
   * @memberof TitleElement
   */
  icon_url?: string;
  /**
   *
   * @type {string}
   * @memberof TitleElement
   */
  icon_color_from_evaluation?: string;
  /**
   * If set to "small", the icon should be displayed at a small size.
   *
   * @type {string}
   * @memberof TitleElement
   */
  icon_size?: string;
}

/**
 * @export
 */
export const TitleElementTypeEnum = {
  grade: "grade",
  percentage: "percentage",
} as const;
export type TitleElementTypeEnum =
  (typeof TitleElementTypeEnum)[keyof typeof TitleElementTypeEnum];

/**
 * @export
 */
export const TitleElementGradeEnum = {
  a: "a",
  b: "b",
  c: "c",
  d: "d",
  e: "e",
  unknown: "unknown",
} as const;
export type TitleElementGradeEnum =
  (typeof TitleElementGradeEnum)[keyof typeof TitleElementGradeEnum];

/**
 * Check if a given object implements the TitleElement interface.
 */
export function instanceOfTitleElement(value: object): value is TitleElement {
  return true;
}

export function TitleElementFromJSON(json: any): TitleElement {
  return TitleElementFromJSONTyped(json, false);
}

export function TitleElementFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TitleElement {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"] == null ? undefined : json["name"],
    title: json["title"] == null ? undefined : json["title"],
    type: json["type"] == null ? undefined : json["type"],
    grade: json["grade"] == null ? undefined : json["grade"],
    value: json["value"] == null ? undefined : json["value"],
    icon_url: json["icon_url"] == null ? undefined : json["icon_url"],
    icon_color_from_evaluation:
      json["icon_color_from_evaluation"] == null
        ? undefined
        : json["icon_color_from_evaluation"],
    icon_size: json["icon_size"] == null ? undefined : json["icon_size"],
  };
}

export function TitleElementToJSON(json: any): TitleElement {
  return TitleElementToJSONTyped(json, false);
}

export function TitleElementToJSONTyped(
  value?: TitleElement | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value["name"],
    title: value["title"],
    type: value["type"],
    grade: value["grade"],
    value: value["value"],
    icon_url: value["icon_url"],
    icon_color_from_evaluation: value["icon_color_from_evaluation"],
    icon_size: value["icon_size"],
  };
}
