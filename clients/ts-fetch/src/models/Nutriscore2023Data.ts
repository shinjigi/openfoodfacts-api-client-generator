/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Nutriscore2023DataComponents } from "./Nutriscore2023DataComponents";
import {
  Nutriscore2023DataComponentsFromJSON,
  Nutriscore2023DataComponentsFromJSONTyped,
  Nutriscore2023DataComponentsToJSON,
  Nutriscore2023DataComponentsToJSONTyped,
} from "./Nutriscore2023DataComponents";

/**
 *
 * @export
 * @interface Nutriscore2023Data
 */
export interface Nutriscore2023Data {
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  is_beverage?: Nutriscore2023DataIsBeverageEnum;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  is_cheese?: Nutriscore2023DataIsCheeseEnum;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  is_water?: Nutriscore2023DataIsWaterEnum;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  is_fat_oil_nuts_seeds?: Nutriscore2023DataIsFatOilNutsSeedsEnum;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  is_red_meat_product?: Nutriscore2023DataIsRedMeatProductEnum;
  /**
   *
   * @type {Nutriscore2023DataComponents}
   * @memberof Nutriscore2023Data
   */
  components?: Nutriscore2023DataComponents;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  count_proteins?: number;
  /**
   *
   * @type {string}
   * @memberof Nutriscore2023Data
   */
  count_proteins_reason?: string;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  negative_points?: number;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  positive_points?: number;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  negative_points_max?: number;
  /**
   *
   * @type {number}
   * @memberof Nutriscore2023Data
   */
  positive_points_max?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof Nutriscore2023Data
   */
  positive_nutrients?: Array<string>;
}

/**
 * @export
 */
export const Nutriscore2023DataIsBeverageEnum = {
  NUMBER_0: 0,
  NUMBER_1: 1,
} as const;
export type Nutriscore2023DataIsBeverageEnum =
  (typeof Nutriscore2023DataIsBeverageEnum)[keyof typeof Nutriscore2023DataIsBeverageEnum];

/**
 * @export
 */
export const Nutriscore2023DataIsCheeseEnum = {
  NUMBER_0: 0,
  NUMBER_1: 1,
} as const;
export type Nutriscore2023DataIsCheeseEnum =
  (typeof Nutriscore2023DataIsCheeseEnum)[keyof typeof Nutriscore2023DataIsCheeseEnum];

/**
 * @export
 */
export const Nutriscore2023DataIsWaterEnum = {
  NUMBER_0: 0,
  NUMBER_1: 1,
} as const;
export type Nutriscore2023DataIsWaterEnum =
  (typeof Nutriscore2023DataIsWaterEnum)[keyof typeof Nutriscore2023DataIsWaterEnum];

/**
 * @export
 */
export const Nutriscore2023DataIsFatOilNutsSeedsEnum = {
  NUMBER_0: 0,
  NUMBER_1: 1,
} as const;
export type Nutriscore2023DataIsFatOilNutsSeedsEnum =
  (typeof Nutriscore2023DataIsFatOilNutsSeedsEnum)[keyof typeof Nutriscore2023DataIsFatOilNutsSeedsEnum];

/**
 * @export
 */
export const Nutriscore2023DataIsRedMeatProductEnum = {
  NUMBER_0: 0,
  NUMBER_1: 1,
} as const;
export type Nutriscore2023DataIsRedMeatProductEnum =
  (typeof Nutriscore2023DataIsRedMeatProductEnum)[keyof typeof Nutriscore2023DataIsRedMeatProductEnum];

/**
 * Check if a given object implements the Nutriscore2023Data interface.
 */
export function instanceOfNutriscore2023Data(
  value: object,
): value is Nutriscore2023Data {
  return true;
}

export function Nutriscore2023DataFromJSON(json: any): Nutriscore2023Data {
  return Nutriscore2023DataFromJSONTyped(json, false);
}

export function Nutriscore2023DataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Nutriscore2023Data {
  if (json == null) {
    return json;
  }
  return {
    is_beverage: json["is_beverage"] == null ? undefined : json["is_beverage"],
    is_cheese: json["is_cheese"] == null ? undefined : json["is_cheese"],
    is_water: json["is_water"] == null ? undefined : json["is_water"],
    is_fat_oil_nuts_seeds:
      json["is_fat_oil_nuts_seeds"] == null
        ? undefined
        : json["is_fat_oil_nuts_seeds"],
    is_red_meat_product:
      json["is_red_meat_product"] == null
        ? undefined
        : json["is_red_meat_product"],
    components:
      json["components"] == null
        ? undefined
        : Nutriscore2023DataComponentsFromJSON(json["components"]),
    count_proteins:
      json["count_proteins"] == null ? undefined : json["count_proteins"],
    count_proteins_reason:
      json["count_proteins_reason"] == null
        ? undefined
        : json["count_proteins_reason"],
    negative_points:
      json["negative_points"] == null ? undefined : json["negative_points"],
    positive_points:
      json["positive_points"] == null ? undefined : json["positive_points"],
    negative_points_max:
      json["negative_points_max"] == null
        ? undefined
        : json["negative_points_max"],
    positive_points_max:
      json["positive_points_max"] == null
        ? undefined
        : json["positive_points_max"],
    positive_nutrients:
      json["positive_nutrients"] == null
        ? undefined
        : json["positive_nutrients"],
  };
}

export function Nutriscore2023DataToJSON(json: any): Nutriscore2023Data {
  return Nutriscore2023DataToJSONTyped(json, false);
}

export function Nutriscore2023DataToJSONTyped(
  value?: Nutriscore2023Data | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    is_beverage: value["is_beverage"],
    is_cheese: value["is_cheese"],
    is_water: value["is_water"],
    is_fat_oil_nuts_seeds: value["is_fat_oil_nuts_seeds"],
    is_red_meat_product: value["is_red_meat_product"],
    components: Nutriscore2023DataComponentsToJSON(value["components"]),
    count_proteins: value["count_proteins"],
    count_proteins_reason: value["count_proteins_reason"],
    negative_points: value["negative_points"],
    positive_points: value["positive_points"],
    negative_points_max: value["negative_points_max"],
    positive_points_max: value["positive_points_max"],
    positive_nutrients: value["positive_nutrients"],
  };
}
