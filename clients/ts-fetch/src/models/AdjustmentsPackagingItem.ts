/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface AdjustmentsPackagingItem
 */
export interface AdjustmentsPackagingItem {
  /**
   *
   * @type {number}
   * @memberof AdjustmentsPackagingItem
   */
  ecoscore_material_score?: number;
  /**
   *
   * @type {number}
   * @memberof AdjustmentsPackagingItem
   */
  ecoscore_shape_ratio?: number;
  /**
   *
   * @type {string}
   * @memberof AdjustmentsPackagingItem
   */
  material?: string;
  /**
   *
   * @type {string}
   * @memberof AdjustmentsPackagingItem
   */
  shape?: string;
  /**
   *
   * @type {number}
   * @memberof AdjustmentsPackagingItem
   */
  number_of_units?: number;
  /**
   *
   * @type {string}
   * @memberof AdjustmentsPackagingItem
   */
  quantity_per_unit?: string;
  /**
   *
   * @type {string}
   * @memberof AdjustmentsPackagingItem
   */
  quantity_per_unit_unit?: string;
  /**
   *
   * @type {number}
   * @memberof AdjustmentsPackagingItem
   */
  quantity_per_unit_value?: number;
  /**
   *
   * @type {string}
   * @memberof AdjustmentsPackagingItem
   */
  recycling?: string;
  /**
   *
   * @type {number}
   * @memberof AdjustmentsPackagingItem
   */
  weight_measured?: number;
}

/**
 * Check if a given object implements the AdjustmentsPackagingItem interface.
 */
export function instanceOfAdjustmentsPackagingItem(
  value: object,
): value is AdjustmentsPackagingItem {
  return true;
}

export function AdjustmentsPackagingItemFromJSON(
  json: any,
): AdjustmentsPackagingItem {
  return AdjustmentsPackagingItemFromJSONTyped(json, false);
}

export function AdjustmentsPackagingItemFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AdjustmentsPackagingItem {
  if (json == null) {
    return json;
  }
  return {
    ecoscore_material_score:
      json["ecoscore_material_score"] == null
        ? undefined
        : json["ecoscore_material_score"],
    ecoscore_shape_ratio:
      json["ecoscore_shape_ratio"] == null
        ? undefined
        : json["ecoscore_shape_ratio"],
    material: json["material"] == null ? undefined : json["material"],
    shape: json["shape"] == null ? undefined : json["shape"],
    number_of_units:
      json["number_of_units"] == null ? undefined : json["number_of_units"],
    quantity_per_unit:
      json["quantity_per_unit"] == null ? undefined : json["quantity_per_unit"],
    quantity_per_unit_unit:
      json["quantity_per_unit_unit"] == null
        ? undefined
        : json["quantity_per_unit_unit"],
    quantity_per_unit_value:
      json["quantity_per_unit_value"] == null
        ? undefined
        : json["quantity_per_unit_value"],
    recycling: json["recycling"] == null ? undefined : json["recycling"],
    weight_measured:
      json["weight_measured"] == null ? undefined : json["weight_measured"],
  };
}

export function AdjustmentsPackagingItemToJSON(
  json: any,
): AdjustmentsPackagingItem {
  return AdjustmentsPackagingItemToJSONTyped(json, false);
}

export function AdjustmentsPackagingItemToJSONTyped(
  value?: AdjustmentsPackagingItem | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    ecoscore_material_score: value["ecoscore_material_score"],
    ecoscore_shape_ratio: value["ecoscore_shape_ratio"],
    material: value["material"],
    shape: value["shape"],
    number_of_units: value["number_of_units"],
    quantity_per_unit: value["quantity_per_unit"],
    quantity_per_unit_unit: value["quantity_per_unit_unit"],
    quantity_per_unit_value: value["quantity_per_unit_value"],
    recycling: value["recycling"],
    weight_measured: value["weight_measured"],
  };
}
