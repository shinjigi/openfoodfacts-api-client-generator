/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Attribute
 */
export interface Attribute {
  /**
   * unique id of the attribute
   * @type {string}
   * @memberof Attribute
   */
  id?: string;
  /**
   * Name of the attribute
   * @type {string}
   * @memberof Attribute
   */
  name?: string;
  /**
   * url of icon to display next to the settings for this attribute
   * @type {string}
   * @memberof Attribute
   */
  icon_url?: string;
  /**
   * a description of the attribute to display to users
   * @type {string}
   * @memberof Attribute
   */
  setting_name?: string;
  /**
   * a complementary note on the attribute
   * @type {string}
   * @memberof Attribute
   */
  setting_note?: string;
  /**
   * Indicates the default setting for this attribute
   * @type {string}
   * @memberof Attribute
   */
  _default?: AttributeDefaultEnum;
  /**
   * Linked knowledge panel (optional)
   * @type {string}
   * @memberof Attribute
   */
  panel_id?: string;
}

/**
 * @export
 */
export const AttributeDefaultEnum = {
  mandatory: "mandatory",
  very_important: "very_important",
  important: "important",
  not_important: "not_important",
} as const;
export type AttributeDefaultEnum =
  (typeof AttributeDefaultEnum)[keyof typeof AttributeDefaultEnum];

/**
 * Check if a given object implements the Attribute interface.
 */
export function instanceOfAttribute(value: object): value is Attribute {
  return true;
}

export function AttributeFromJSON(json: any): Attribute {
  return AttributeFromJSONTyped(json, false);
}

export function AttributeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Attribute {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"] == null ? undefined : json["name"],
    icon_url: json["icon_url"] == null ? undefined : json["icon_url"],
    setting_name:
      json["setting_name"] == null ? undefined : json["setting_name"],
    setting_note:
      json["setting_note"] == null ? undefined : json["setting_note"],
    _default: json["default"] == null ? undefined : json["default"],
    panel_id: json["panel_id"] == null ? undefined : json["panel_id"],
  };
}

export function AttributeToJSON(json: any): Attribute {
  return AttributeToJSONTyped(json, false);
}

export function AttributeToJSONTyped(
  value?: Attribute | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    name: value["name"],
    icon_url: value["icon_url"],
    setting_name: value["setting_name"],
    setting_note: value["setting_note"],
    default: value["_default"],
    panel_id: value["panel_id"],
  };
}
