/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ImageRoleSizes } from "./ImageRoleSizes";
import {
  ImageRoleSizesFromJSON,
  ImageRoleSizesFromJSONTyped,
  ImageRoleSizesToJSON,
  ImageRoleSizesToJSONTyped,
} from "./ImageRoleSizes";

/**
 * property of an image (or part thereof) selected for a particular role and a particular language.
 *
 * @export
 * @interface ImageRole
 */
export interface ImageRole {
  /**
   * The angle of the image rotation (if it was rotated).
   * @type {number}
   * @memberof ImageRole
   */
  angle?: number;
  /**
   *
   * @type {string}
   * @memberof ImageRole
   */
  coordinates_image_size?: string;
  /**
   *
   * @type {string}
   * @memberof ImageRole
   */
  geometry?: string;
  /**
   * The id of the original/source image that was selected to edit(rotate, normalize etc) to produce this new image.
   * @type {string}
   * @memberof ImageRole
   */
  imgid?: string;
  /**
   * Normalize colors.
   * @type {string}
   * @memberof ImageRole
   */
  normalize?: string;
  /**
   *
   * @type {string}
   * @memberof ImageRole
   */
  rev?: string;
  /**
   *
   * @type {ImageRoleSizes}
   * @memberof ImageRole
   */
  sizes?: ImageRoleSizes;
  /**
   * Photo on white background : Try to remove the background.
   *
   * @type {string}
   * @memberof ImageRole
   */
  white_magic?: string;
  /**
   *
   * @type {string}
   * @memberof ImageRole
   */
  x1?: string;
  /**
   *
   * @type {string}
   * @memberof ImageRole
   */
  x2?: string;
  /**
   *
   * @type {string}
   * @memberof ImageRole
   */
  y1?: string;
  /**
   *
   * @type {string}
   * @memberof ImageRole
   */
  y2?: string;
}

/**
 * Check if a given object implements the ImageRole interface.
 */
export function instanceOfImageRole(value: object): value is ImageRole {
  return true;
}

export function ImageRoleFromJSON(json: any): ImageRole {
  return ImageRoleFromJSONTyped(json, false);
}

export function ImageRoleFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ImageRole {
  if (json == null) {
    return json;
  }
  return {
    angle: json["angle"] == null ? undefined : json["angle"],
    coordinates_image_size:
      json["coordinates_image_size"] == null
        ? undefined
        : json["coordinates_image_size"],
    geometry: json["geometry"] == null ? undefined : json["geometry"],
    imgid: json["imgid"] == null ? undefined : json["imgid"],
    normalize: json["normalize"] == null ? undefined : json["normalize"],
    rev: json["rev"] == null ? undefined : json["rev"],
    sizes:
      json["sizes"] == null ? undefined : ImageRoleSizesFromJSON(json["sizes"]),
    white_magic: json["white_magic"] == null ? undefined : json["white_magic"],
    x1: json["x1"] == null ? undefined : json["x1"],
    x2: json["x2"] == null ? undefined : json["x2"],
    y1: json["y1"] == null ? undefined : json["y1"],
    y2: json["y2"] == null ? undefined : json["y2"],
  };
}

export function ImageRoleToJSON(json: any): ImageRole {
  return ImageRoleToJSONTyped(json, false);
}

export function ImageRoleToJSONTyped(
  value?: ImageRole | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    angle: value["angle"],
    coordinates_image_size: value["coordinates_image_size"],
    geometry: value["geometry"],
    imgid: value["imgid"],
    normalize: value["normalize"],
    rev: value["rev"],
    sizes: ImageRoleSizesToJSON(value["sizes"]),
    white_magic: value["white_magic"],
    x1: value["x1"],
    x2: value["x2"],
    y1: value["y1"],
    y2: value["y2"],
  };
}
