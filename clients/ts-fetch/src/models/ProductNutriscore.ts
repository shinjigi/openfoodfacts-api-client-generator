/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Nutriscore2021Data } from "./Nutriscore2021Data";
import {
  Nutriscore2021DataFromJSON,
  Nutriscore2021DataFromJSONTyped,
  Nutriscore2021DataToJSON,
  Nutriscore2021DataToJSONTyped,
} from "./Nutriscore2021Data";
import type { Nutriscores } from "./Nutriscores";
import {
  NutriscoresFromJSON,
  NutriscoresFromJSONTyped,
  NutriscoresToJSON,
  NutriscoresToJSONTyped,
} from "./Nutriscores";

/**
 *
 * @export
 * @interface ProductNutriscore
 */
export interface ProductNutriscore {
  /**
   *
   * @type {Nutriscores}
   * @memberof ProductNutriscore
   */
  nutriscore?: Nutriscores;
  /**
   *
   * @type {Array<string>}
   * @memberof ProductNutriscore
   */
  nutriscore_2021_tags?: Array<ProductNutriscoreNutriscore2021TagsEnum>;
  /**
   *
   * @type {Array<string>}
   * @memberof ProductNutriscore
   */
  nutriscore_2023_tags?: Array<ProductNutriscoreNutriscore2023TagsEnum>;
  /**
   *
   * @type {Nutriscore2021Data}
   * @memberof ProductNutriscore
   */
  nutriscore_data?: Nutriscore2021Data;
  /**
   * Nutri-Score for the product as a letter.
   *
   * See https://world.openfoodfacts.org/nutriscore.
   *
   * @type {string}
   * @memberof ProductNutriscore
   */
  nutriscore_grade?: ProductNutriscoreNutriscoreGradeEnum;
  /**
   * Nutri-Score for the product as an integer (see also `nutriscore_grade`).
   *
   * @type {number}
   * @memberof ProductNutriscore
   */
  nutriscore_score?: number;
  /**
   *
   * @type {number}
   * @memberof ProductNutriscore
   */
  nutriscore_score_opposite?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof ProductNutriscore
   */
  nutriscore_tags?: Array<ProductNutriscoreNutriscoreTagsEnum>;
  /**
   *
   * @type {string}
   * @memberof ProductNutriscore
   */
  nutriscore_version?: string;
}

/**
 * @export
 */
export const ProductNutriscoreNutriscore2021TagsEnum = {
  a: "a",
  b: "b",
  c: "c",
  d: "d",
  e: "e",
} as const;
export type ProductNutriscoreNutriscore2021TagsEnum =
  (typeof ProductNutriscoreNutriscore2021TagsEnum)[keyof typeof ProductNutriscoreNutriscore2021TagsEnum];

/**
 * @export
 */
export const ProductNutriscoreNutriscore2023TagsEnum = {
  a: "a",
  b: "b",
  c: "c",
  d: "d",
  e: "e",
} as const;
export type ProductNutriscoreNutriscore2023TagsEnum =
  (typeof ProductNutriscoreNutriscore2023TagsEnum)[keyof typeof ProductNutriscoreNutriscore2023TagsEnum];

/**
 * @export
 */
export const ProductNutriscoreNutriscoreGradeEnum = {
  a: "a",
  b: "b",
  c: "c",
  d: "d",
  e: "e",
} as const;
export type ProductNutriscoreNutriscoreGradeEnum =
  (typeof ProductNutriscoreNutriscoreGradeEnum)[keyof typeof ProductNutriscoreNutriscoreGradeEnum];

/**
 * @export
 */
export const ProductNutriscoreNutriscoreTagsEnum = {
  a: "a",
  b: "b",
  c: "c",
  d: "d",
  e: "e",
} as const;
export type ProductNutriscoreNutriscoreTagsEnum =
  (typeof ProductNutriscoreNutriscoreTagsEnum)[keyof typeof ProductNutriscoreNutriscoreTagsEnum];

/**
 * Check if a given object implements the ProductNutriscore interface.
 */
export function instanceOfProductNutriscore(
  value: object,
): value is ProductNutriscore {
  return true;
}

export function ProductNutriscoreFromJSON(json: any): ProductNutriscore {
  return ProductNutriscoreFromJSONTyped(json, false);
}

export function ProductNutriscoreFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProductNutriscore {
  if (json == null) {
    return json;
  }
  return {
    nutriscore:
      json["nutriscore"] == null
        ? undefined
        : NutriscoresFromJSON(json["nutriscore"]),
    nutriscore_2021_tags:
      json["nutriscore_2021_tags"] == null
        ? undefined
        : json["nutriscore_2021_tags"],
    nutriscore_2023_tags:
      json["nutriscore_2023_tags"] == null
        ? undefined
        : json["nutriscore_2023_tags"],
    nutriscore_data:
      json["nutriscore_data"] == null
        ? undefined
        : Nutriscore2021DataFromJSON(json["nutriscore_data"]),
    nutriscore_grade:
      json["nutriscore_grade"] == null ? undefined : json["nutriscore_grade"],
    nutriscore_score:
      json["nutriscore_score"] == null ? undefined : json["nutriscore_score"],
    nutriscore_score_opposite:
      json["nutriscore_score_opposite"] == null
        ? undefined
        : json["nutriscore_score_opposite"],
    nutriscore_tags:
      json["nutriscore_tags"] == null ? undefined : json["nutriscore_tags"],
    nutriscore_version:
      json["nutriscore_version"] == null
        ? undefined
        : json["nutriscore_version"],
  };
}

export function ProductNutriscoreToJSON(json: any): ProductNutriscore {
  return ProductNutriscoreToJSONTyped(json, false);
}

export function ProductNutriscoreToJSONTyped(
  value?: ProductNutriscore | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    nutriscore: NutriscoresToJSON(value["nutriscore"]),
    nutriscore_2021_tags: value["nutriscore_2021_tags"],
    nutriscore_2023_tags: value["nutriscore_2023_tags"],
    nutriscore_data: Nutriscore2021DataToJSON(value["nutriscore_data"]),
    nutriscore_grade: value["nutriscore_grade"],
    nutriscore_score: value["nutriscore_score"],
    nutriscore_score_opposite: value["nutriscore_score_opposite"],
    nutriscore_tags: value["nutriscore_tags"],
    nutriscore_version: value["nutriscore_version"],
  };
}
