/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ProductEcoscoreDataAgribalyse } from "./ProductEcoscoreDataAgribalyse";
import {
  ProductEcoscoreDataAgribalyseFromJSON,
  ProductEcoscoreDataAgribalyseFromJSONTyped,
  ProductEcoscoreDataAgribalyseToJSON,
  ProductEcoscoreDataAgribalyseToJSONTyped,
} from "./ProductEcoscoreDataAgribalyse";

/**
 *
 * @export
 * @interface ProductEcoscoreDataPreviousData
 */
export interface ProductEcoscoreDataPreviousData {
  /**
   *
   * @type {string}
   * @memberof ProductEcoscoreDataPreviousData
   */
  grade?: string | null;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataPreviousData
   */
  score?: number | null;
  /**
   *
   * @type {ProductEcoscoreDataAgribalyse}
   * @memberof ProductEcoscoreDataPreviousData
   */
  agribalyse?: ProductEcoscoreDataAgribalyse;
}

/**
 * Check if a given object implements the ProductEcoscoreDataPreviousData interface.
 */
export function instanceOfProductEcoscoreDataPreviousData(
  value: object,
): value is ProductEcoscoreDataPreviousData {
  return true;
}

export function ProductEcoscoreDataPreviousDataFromJSON(
  json: any,
): ProductEcoscoreDataPreviousData {
  return ProductEcoscoreDataPreviousDataFromJSONTyped(json, false);
}

export function ProductEcoscoreDataPreviousDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProductEcoscoreDataPreviousData {
  if (json == null) {
    return json;
  }
  return {
    grade: json["grade"] == null ? undefined : json["grade"],
    score: json["score"] == null ? undefined : json["score"],
    agribalyse:
      json["agribalyse"] == null
        ? undefined
        : ProductEcoscoreDataAgribalyseFromJSON(json["agribalyse"]),
  };
}

export function ProductEcoscoreDataPreviousDataToJSON(
  json: any,
): ProductEcoscoreDataPreviousData {
  return ProductEcoscoreDataPreviousDataToJSONTyped(json, false);
}

export function ProductEcoscoreDataPreviousDataToJSONTyped(
  value?: ProductEcoscoreDataPreviousData | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    grade: value["grade"],
    score: value["score"],
    agribalyse: ProductEcoscoreDataAgribalyseToJSON(value["agribalyse"]),
  };
}
