/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ProductNutritionNutriscoreData } from "./ProductNutritionNutriscoreData";
import {
  ProductNutritionNutriscoreDataFromJSON,
  ProductNutritionNutriscoreDataFromJSONTyped,
  ProductNutritionNutriscoreDataToJSON,
  ProductNutritionNutriscoreDataToJSONTyped,
} from "./ProductNutritionNutriscoreData";
import type { ProductNutritionNutriments } from "./ProductNutritionNutriments";
import {
  ProductNutritionNutrimentsFromJSON,
  ProductNutritionNutrimentsFromJSONTyped,
  ProductNutritionNutrimentsToJSON,
  ProductNutritionNutrimentsToJSONTyped,
} from "./ProductNutritionNutriments";

/**
 * Nutrition fields of a product
 *
 * Most of these properties are read-only.
 *
 * See [how to add nutrition data](https://openfoodfacts.github.io/openfoodfacts-server/api/ref-cheatsheet/#add-nutrition-facts-values-units-and-base)
 *
 * @export
 * @interface ProductNutrition
 */
export interface ProductNutrition {
  /**
   * When a product does not have nutrition data displayed on the
   * packaging, the user can check the field "Nutrition facts are
   * not specified on the product".
   * By doing so, the no_nutrition_data field takes the value "on".
   * This case is frequent (thousands of products).
   *
   * @type {string}
   * @memberof ProductNutrition
   */
  no_nutrition_data?: string;
  /**
   * The nutrition data on the package can be per serving or per 100g.
   *
   * This is essential to understand if `<nutrient>_value` and `<nutrient>`
   * values in `nutriments` applies for a serving or for 100g.
   *
   * **IMPORTANT:**
   * When writing products,
   * this setting applies to all existing nutrients values for the product,
   * not only the nutrient values sent in the write request.
   * So it should not be changed unless all nutrients values are provided
   * with values that match the nutrition_data_per field.
   *
   * @type {string}
   * @memberof ProductNutrition
   */
  nutrition_data_per?: ProductNutritionNutritionDataPerEnum;
  /**
   * The nutrition data for prepared product on the package (if any) can be per serving or per 100g.
   *
   * This is essential to understand if `<nutrient>_prepared_value` and `<nutrient>_prepared`
   * values in `nutriments` applies for a serving or for 100g.
   *
   * See also important note on `nutrition_data_per`.
   *
   * @type {string}
   * @memberof ProductNutrition
   */
  nutrition_data_prepared_per?: ProductNutritionNutritionDataPreparedPerEnum;
  /**
   *
   * @type {ProductNutritionNutriments}
   * @memberof ProductNutrition
   */
  nutriments?: ProductNutritionNutriments;
  /**
   *
   * @type {ProductNutritionNutriscoreData}
   * @memberof ProductNutrition
   */
  nutriscore_data?: ProductNutritionNutriscoreData;
  /**
   * Nutrition grade (‘a’ to ‘e’),
   * https://world.openfoodfacts.org/nutriscore.
   *
   * @type {string}
   * @memberof ProductNutrition
   */
  nutrition_grade_fr?: string;
  /**
   * Nutrition grades as a comma separated list.
   *
   * Some products with multiple components might have multiple Nutri-Score
   *
   * @type {string}
   * @memberof ProductNutrition
   */
  nutrition_grades?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof ProductNutrition
   */
  nutrition_grades_tags?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof ProductNutrition
   */
  nutrition_score_beverage?: number;
  /**
   *
   * @type {number}
   * @memberof ProductNutrition
   */
  nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients?: number;
  /**
   *
   * @type {number}
   * @memberof ProductNutrition
   */
  nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients_value?: number;
  /**
   *
   * @type {number}
   * @memberof ProductNutrition
   */
  nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients?: number;
  /**
   *
   * @type {number}
   * @memberof ProductNutrition
   */
  nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value?: number;
  /**
   *
   * @type {number}
   * @memberof ProductNutrition
   */
  nutrition_score_warning_no_fiber?: number;
  /**
   *
   * @type {Array<object>}
   * @memberof ProductNutrition
   */
  other_nutritional_substances_tags?: Array<object>;
  /**
   *
   * @type {Array<object>}
   * @memberof ProductNutrition
   */
  unknown_nutrients_tags?: Array<object>;
  /**
   *
   * @type {Array<object>}
   * @memberof ProductNutrition
   */
  vitamins_tags?: Array<object>;
}

/**
 * @export
 */
export const ProductNutritionNutritionDataPerEnum = {
  serving: "serving",
  _100g: "100g",
} as const;
export type ProductNutritionNutritionDataPerEnum =
  (typeof ProductNutritionNutritionDataPerEnum)[keyof typeof ProductNutritionNutritionDataPerEnum];

/**
 * @export
 */
export const ProductNutritionNutritionDataPreparedPerEnum = {
  serving: "serving",
  _100g: "100g",
} as const;
export type ProductNutritionNutritionDataPreparedPerEnum =
  (typeof ProductNutritionNutritionDataPreparedPerEnum)[keyof typeof ProductNutritionNutritionDataPreparedPerEnum];

/**
 * Check if a given object implements the ProductNutrition interface.
 */
export function instanceOfProductNutrition(
  value: object,
): value is ProductNutrition {
  return true;
}

export function ProductNutritionFromJSON(json: any): ProductNutrition {
  return ProductNutritionFromJSONTyped(json, false);
}

export function ProductNutritionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProductNutrition {
  if (json == null) {
    return json;
  }
  return {
    no_nutrition_data:
      json["no_nutrition_data"] == null ? undefined : json["no_nutrition_data"],
    nutrition_data_per:
      json["nutrition_data_per"] == null
        ? undefined
        : json["nutrition_data_per"],
    nutrition_data_prepared_per:
      json["nutrition_data_prepared_per"] == null
        ? undefined
        : json["nutrition_data_prepared_per"],
    nutriments:
      json["nutriments"] == null
        ? undefined
        : ProductNutritionNutrimentsFromJSON(json["nutriments"]),
    nutriscore_data:
      json["nutriscore_data"] == null
        ? undefined
        : ProductNutritionNutriscoreDataFromJSON(json["nutriscore_data"]),
    nutrition_grade_fr:
      json["nutrition_grade_fr"] == null
        ? undefined
        : json["nutrition_grade_fr"],
    nutrition_grades:
      json["nutrition_grades"] == null ? undefined : json["nutrition_grades"],
    nutrition_grades_tags:
      json["nutrition_grades_tags"] == null
        ? undefined
        : json["nutrition_grades_tags"],
    nutrition_score_beverage:
      json["nutrition_score_beverage"] == null
        ? undefined
        : json["nutrition_score_beverage"],
    nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients:
      json[
        "nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients"
      ] == null
        ? undefined
        : json[
            "nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients"
          ],
    nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients_value:
      json[
        "nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients_value"
      ] == null
        ? undefined
        : json[
            "nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients_value"
          ],
    nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients:
      json[
        "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients"
      ] == null
        ? undefined
        : json[
            "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients"
          ],
    nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value:
      json[
        "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value"
      ] == null
        ? undefined
        : json[
            "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value"
          ],
    nutrition_score_warning_no_fiber:
      json["nutrition_score_warning_no_fiber"] == null
        ? undefined
        : json["nutrition_score_warning_no_fiber"],
    other_nutritional_substances_tags:
      json["other_nutritional_substances_tags"] == null
        ? undefined
        : json["other_nutritional_substances_tags"],
    unknown_nutrients_tags:
      json["unknown_nutrients_tags"] == null
        ? undefined
        : json["unknown_nutrients_tags"],
    vitamins_tags:
      json["vitamins_tags"] == null ? undefined : json["vitamins_tags"],
  };
}

export function ProductNutritionToJSON(json: any): ProductNutrition {
  return ProductNutritionToJSONTyped(json, false);
}

export function ProductNutritionToJSONTyped(
  value?: ProductNutrition | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    no_nutrition_data: value["no_nutrition_data"],
    nutrition_data_per: value["nutrition_data_per"],
    nutrition_data_prepared_per: value["nutrition_data_prepared_per"],
    nutriments: ProductNutritionNutrimentsToJSON(value["nutriments"]),
    nutriscore_data: ProductNutritionNutriscoreDataToJSON(
      value["nutriscore_data"],
    ),
    nutrition_grade_fr: value["nutrition_grade_fr"],
    nutrition_grades: value["nutrition_grades"],
    nutrition_grades_tags: value["nutrition_grades_tags"],
    nutrition_score_beverage: value["nutrition_score_beverage"],
    nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients:
      value[
        "nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients"
      ],
    nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients_value:
      value[
        "nutrition_score_warning_fruits_vegetables_legumes_estimate_from_ingredients_value"
      ],
    nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients:
      value[
        "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients"
      ],
    nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value:
      value[
        "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value"
      ],
    nutrition_score_warning_no_fiber: value["nutrition_score_warning_no_fiber"],
    other_nutritional_substances_tags:
      value["other_nutritional_substances_tags"],
    unknown_nutrients_tags: value["unknown_nutrients_tags"],
    vitamins_tags: value["vitamins_tags"],
  };
}
