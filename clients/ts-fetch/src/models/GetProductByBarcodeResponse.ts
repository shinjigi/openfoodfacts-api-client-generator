/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Product } from "./Product";
import {
  ProductFromJSON,
  ProductFromJSONTyped,
  ProductToJSON,
  ProductToJSONTyped,
} from "./Product";

/**
 *
 * @export
 * @interface GetProductByBarcodeResponse
 */
export interface GetProductByBarcodeResponse {
  /**
   * Barcode of the product
   * (can be EAN-13 or internal codes for some food stores).
   * For products without a barcode, Open Food Facts assigns a
   * number starting with the 200 reserved prefix.
   *
   * @type {string}
   * @memberof GetProductByBarcodeResponse
   */
  code?: string;
  /**
   * Return values based on ProductOpener/Display.pm analysis
   * @type {number}
   * @memberof GetProductByBarcodeResponse
   */
  status?: GetProductByBarcodeResponseStatusEnum;
  /**
   *
   * @type {string}
   * @memberof GetProductByBarcodeResponse
   */
  status_verbose?: string;
  /**
   *
   * @type {Product}
   * @memberof GetProductByBarcodeResponse
   */
  product?: Product;
}

/**
 * @export
 */
export const GetProductByBarcodeResponseStatusEnum = {
  NUMBER_0: 0,
  NUMBER_1: 1,
} as const;
export type GetProductByBarcodeResponseStatusEnum =
  (typeof GetProductByBarcodeResponseStatusEnum)[keyof typeof GetProductByBarcodeResponseStatusEnum];

/**
 * Check if a given object implements the GetProductByBarcodeResponse interface.
 */
export function instanceOfGetProductByBarcodeResponse(
  value: object,
): value is GetProductByBarcodeResponse {
  return true;
}

export function GetProductByBarcodeResponseFromJSON(
  json: any,
): GetProductByBarcodeResponse {
  return GetProductByBarcodeResponseFromJSONTyped(json, false);
}

export function GetProductByBarcodeResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetProductByBarcodeResponse {
  if (json == null) {
    return json;
  }
  return {
    code: json["code"] == null ? undefined : json["code"],
    status: json["status"] == null ? undefined : json["status"],
    status_verbose:
      json["status_verbose"] == null ? undefined : json["status_verbose"],
    product:
      json["product"] == null ? undefined : ProductFromJSON(json["product"]),
  };
}

export function GetProductByBarcodeResponseToJSON(
  json: any,
): GetProductByBarcodeResponse {
  return GetProductByBarcodeResponseToJSONTyped(json, false);
}

export function GetProductByBarcodeResponseToJSONTyped(
  value?: GetProductByBarcodeResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    code: value["code"],
    status: value["status"],
    status_verbose: value["status_verbose"],
    product: ProductToJSON(value["product"]),
  };
}
