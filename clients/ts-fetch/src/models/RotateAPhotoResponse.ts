/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { RotateAPhotoResponseImage } from "./RotateAPhotoResponseImage";
import {
  RotateAPhotoResponseImageFromJSON,
  RotateAPhotoResponseImageFromJSONTyped,
  RotateAPhotoResponseImageToJSON,
  RotateAPhotoResponseImageToJSONTyped,
} from "./RotateAPhotoResponseImage";

/**
 *
 * @export
 * @interface RotateAPhotoResponse
 */
export interface RotateAPhotoResponse {
  /**
   *
   * @type {string}
   * @memberof RotateAPhotoResponse
   */
  status?: string;
  /**
   *
   * @type {string}
   * @memberof RotateAPhotoResponse
   */
  imagefield?: string;
  /**
   *
   * @type {RotateAPhotoResponseImage}
   * @memberof RotateAPhotoResponse
   */
  image?: RotateAPhotoResponseImage;
}

/**
 * Check if a given object implements the RotateAPhotoResponse interface.
 */
export function instanceOfRotateAPhotoResponse(
  value: object,
): value is RotateAPhotoResponse {
  return true;
}

export function RotateAPhotoResponseFromJSON(json: any): RotateAPhotoResponse {
  return RotateAPhotoResponseFromJSONTyped(json, false);
}

export function RotateAPhotoResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RotateAPhotoResponse {
  if (json == null) {
    return json;
  }
  return {
    status: json["status"] == null ? undefined : json["status"],
    imagefield: json["imagefield"] == null ? undefined : json["imagefield"],
    image:
      json["image"] == null
        ? undefined
        : RotateAPhotoResponseImageFromJSON(json["image"]),
  };
}

export function RotateAPhotoResponseToJSON(json: any): RotateAPhotoResponse {
  return RotateAPhotoResponseToJSONTyped(json, false);
}

export function RotateAPhotoResponseToJSONTyped(
  value?: RotateAPhotoResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    status: value["status"],
    imagefield: value["imagefield"],
    image: RotateAPhotoResponseImageToJSON(value["image"]),
  };
}
