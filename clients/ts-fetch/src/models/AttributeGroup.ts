/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Attribute } from "./Attribute";
import {
  AttributeFromJSON,
  AttributeFromJSONTyped,
  AttributeToJSON,
  AttributeToJSONTyped,
} from "./Attribute";

/**
 *
 * @export
 * @interface AttributeGroup
 */
export interface AttributeGroup {
  /**
   * unique id of the group
   * @type {string}
   * @memberof AttributeGroup
   */
  id?: string;
  /**
   * Name of the group
   * @type {string}
   * @memberof AttributeGroup
   */
  name?: string;
  /**
   * Attributes that are part of this group
   *
   * @type {Array<Attribute>}
   * @memberof AttributeGroup
   */
  attributes?: Array<Attribute>;
}

/**
 * Check if a given object implements the AttributeGroup interface.
 */
export function instanceOfAttributeGroup(
  value: object,
): value is AttributeGroup {
  return true;
}

export function AttributeGroupFromJSON(json: any): AttributeGroup {
  return AttributeGroupFromJSONTyped(json, false);
}

export function AttributeGroupFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AttributeGroup {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"] == null ? undefined : json["name"],
    attributes:
      json["attributes"] == null
        ? undefined
        : (json["attributes"] as Array<any>).map(AttributeFromJSON),
  };
}

export function AttributeGroupToJSON(json: any): AttributeGroup {
  return AttributeGroupToJSONTyped(json, false);
}

export function AttributeGroupToJSONTyped(
  value?: AttributeGroup | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    name: value["name"],
    attributes:
      value["attributes"] == null
        ? undefined
        : (value["attributes"] as Array<any>).map(AttributeToJSON),
  };
}
