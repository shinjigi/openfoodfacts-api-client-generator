/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database.
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ProductEcoscoreDataAgribalyse
 */
export interface ProductEcoscoreDataAgribalyse {
  /**
   *
   * @type {string}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  agribalyse_proxy_food_code?: string;
  /**
   *
   * @type {string}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  agribalyse_food_code?: string;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  co2_agriculture?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  co2_consumption?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  co2_distribution?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  co2_packaging?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  co2_processing?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  co2_total?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  co2_transportation?: number;
  /**
   *
   * @type {string}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  code?: string;
  /**
   *
   * @type {string}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  dqr?: string;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  ef_agriculture?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  ef_consumption?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  ef_distribution?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  ef_packaging?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  ef_processing?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  ef_total?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  ef_transportation?: number;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  is_beverage?: number;
  /**
   * This can be returned in many other languages
   * like name_fr (for french).
   *
   * @type {string}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  name_en?: string;
  /**
   *
   * @type {number}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  score?: number;
  /**
   *
   * @type {string}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  version?: string;
  /**
   *
   * @type {string}
   * @memberof ProductEcoscoreDataAgribalyse
   */
  warning?: string;
}

/**
 * Check if a given object implements the ProductEcoscoreDataAgribalyse interface.
 */
export function instanceOfProductEcoscoreDataAgribalyse(
  value: object,
): value is ProductEcoscoreDataAgribalyse {
  return true;
}

export function ProductEcoscoreDataAgribalyseFromJSON(
  json: any,
): ProductEcoscoreDataAgribalyse {
  return ProductEcoscoreDataAgribalyseFromJSONTyped(json, false);
}

export function ProductEcoscoreDataAgribalyseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProductEcoscoreDataAgribalyse {
  if (json == null) {
    return json;
  }
  return {
    agribalyse_proxy_food_code:
      json["agribalyse_proxy_food_code"] == null
        ? undefined
        : json["agribalyse_proxy_food_code"],
    agribalyse_food_code:
      json["agribalyse_food_code"] == null
        ? undefined
        : json["agribalyse_food_code"],
    co2_agriculture:
      json["co2_agriculture"] == null ? undefined : json["co2_agriculture"],
    co2_consumption:
      json["co2_consumption"] == null ? undefined : json["co2_consumption"],
    co2_distribution:
      json["co2_distribution"] == null ? undefined : json["co2_distribution"],
    co2_packaging:
      json["co2_packaging"] == null ? undefined : json["co2_packaging"],
    co2_processing:
      json["co2_processing"] == null ? undefined : json["co2_processing"],
    co2_total: json["co2_total"] == null ? undefined : json["co2_total"],
    co2_transportation:
      json["co2_transportation"] == null
        ? undefined
        : json["co2_transportation"],
    code: json["code"] == null ? undefined : json["code"],
    dqr: json["dqr"] == null ? undefined : json["dqr"],
    ef_agriculture:
      json["ef_agriculture"] == null ? undefined : json["ef_agriculture"],
    ef_consumption:
      json["ef_consumption"] == null ? undefined : json["ef_consumption"],
    ef_distribution:
      json["ef_distribution"] == null ? undefined : json["ef_distribution"],
    ef_packaging:
      json["ef_packaging"] == null ? undefined : json["ef_packaging"],
    ef_processing:
      json["ef_processing"] == null ? undefined : json["ef_processing"],
    ef_total: json["ef_total"] == null ? undefined : json["ef_total"],
    ef_transportation:
      json["ef_transportation"] == null ? undefined : json["ef_transportation"],
    is_beverage: json["is_beverage"] == null ? undefined : json["is_beverage"],
    name_en: json["name_en"] == null ? undefined : json["name_en"],
    score: json["score"] == null ? undefined : json["score"],
    version: json["version"] == null ? undefined : json["version"],
    warning: json["warning"] == null ? undefined : json["warning"],
  };
}

export function ProductEcoscoreDataAgribalyseToJSON(
  json: any,
): ProductEcoscoreDataAgribalyse {
  return ProductEcoscoreDataAgribalyseToJSONTyped(json, false);
}

export function ProductEcoscoreDataAgribalyseToJSONTyped(
  value?: ProductEcoscoreDataAgribalyse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    agribalyse_proxy_food_code: value["agribalyse_proxy_food_code"],
    agribalyse_food_code: value["agribalyse_food_code"],
    co2_agriculture: value["co2_agriculture"],
    co2_consumption: value["co2_consumption"],
    co2_distribution: value["co2_distribution"],
    co2_packaging: value["co2_packaging"],
    co2_processing: value["co2_processing"],
    co2_total: value["co2_total"],
    co2_transportation: value["co2_transportation"],
    code: value["code"],
    dqr: value["dqr"],
    ef_agriculture: value["ef_agriculture"],
    ef_consumption: value["ef_consumption"],
    ef_distribution: value["ef_distribution"],
    ef_packaging: value["ef_packaging"],
    ef_processing: value["ef_processing"],
    ef_total: value["ef_total"],
    ef_transportation: value["ef_transportation"],
    is_beverage: value["is_beverage"],
    name_en: value["name_en"],
    score: value["score"],
    version: value["version"],
    warning: value["warning"],
  };
}
