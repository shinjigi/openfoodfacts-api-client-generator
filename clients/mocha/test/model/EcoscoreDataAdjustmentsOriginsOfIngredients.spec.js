/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function (expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EcoscoreDataAdjustmentsOriginsOfIngredients', function () {
    it('should create an instance of EcoscoreDataAdjustmentsOriginsOfIngredients', function () {
      // uncomment below and update the code to test EcoscoreDataAdjustmentsOriginsOfIngredients
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      expect(instance).to.be.a(OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients);
    });

    it('should have the property aggregatedOrigins (base name: "aggregated_origins")', function () {
      // uncomment below and update the code to test the property aggregatedOrigins
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      //expect(instance).to.be();
    });

    it('should have the property epiScore (base name: "epi_score")', function () {
      // uncomment below and update the code to test the property epiScore
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      //expect(instance).to.be();
    });

    it('should have the property epiValue (base name: "epi_value")', function () {
      // uncomment below and update the code to test the property epiValue
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      //expect(instance).to.be();
    });

    it('should have the property originsFromOriginsField (base name: "origins_from_origins_field")', function () {
      // uncomment below and update the code to test the property originsFromOriginsField
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      //expect(instance).to.be();
    });

    it('should have the property transportationScores (base name: "transportation_scores")', function () {
      // uncomment below and update the code to test the property transportationScores
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      //expect(instance).to.be();
    });

    it('should have the property transportationValues (base name: "transportation_values")', function () {
      // uncomment below and update the code to test the property transportationValues
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      //expect(instance).to.be();
    });

    it('should have the property values (base name: "values")', function () {
      // uncomment below and update the code to test the property values
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      //expect(instance).to.be();
    });

    it('should have the property warning (base name: "warning")', function () {
      // uncomment below and update the code to test the property warning
      var instance = new OpenFoodFactsOpenApi.EcoscoreDataAdjustmentsOriginsOfIngredients();
      //expect(instance).to.be();
    });

  });

}));
