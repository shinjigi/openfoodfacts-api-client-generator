/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function (expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductNutritionNutriments', function () {
    it('should create an instance of ProductNutritionNutriments', function () {
      // uncomment below and update the code to test ProductNutritionNutriments
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      expect(instance).to.be.a(OpenFoodFactsOpenApi.ProductNutritionNutriments);
    });

    it('should have the property alcohol (base name: "alcohol")', function () {
      // uncomment below and update the code to test the property alcohol
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property carbohydrates (base name: "carbohydrates")', function () {
      // uncomment below and update the code to test the property carbohydrates
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property energy (base name: "energy")', function () {
      // uncomment below and update the code to test the property energy
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property energyValue (base name: "energy_value")', function () {
      // uncomment below and update the code to test the property energyValue
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property energyUnit (base name: "energy_unit")', function () {
      // uncomment below and update the code to test the property energyUnit
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property energyKcal (base name: "energy-kcal")', function () {
      // uncomment below and update the code to test the property energyKcal
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property energyKj (base name: "energy-kj")', function () {
      // uncomment below and update the code to test the property energyKj
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property fat (base name: "fat")', function () {
      // uncomment below and update the code to test the property fat
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property fruitsVegetablesLegumesEstimateFromIngredients (base name: "fruits-vegetables-legumes-estimate-from-ingredients")', function () {
      // uncomment below and update the code to test the property fruitsVegetablesLegumesEstimateFromIngredients
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property fruitsVegetablesNutsEstimateFromIngredients (base name: "fruits-vegetables-nuts-estimate-from-ingredients")', function () {
      // uncomment below and update the code to test the property fruitsVegetablesNutsEstimateFromIngredients
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property novaGroup (base name: "nova-group")', function () {
      // uncomment below and update the code to test the property novaGroup
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property nutritionScoreFr (base name: "nutrition-score-fr")', function () {
      // uncomment below and update the code to test the property nutritionScoreFr
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property proteins (base name: "proteins")', function () {
      // uncomment below and update the code to test the property proteins
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property salt (base name: "salt")', function () {
      // uncomment below and update the code to test the property salt
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property saturatedFat (base name: "saturated-fat")', function () {
      // uncomment below and update the code to test the property saturatedFat
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property sodium (base name: "sodium")', function () {
      // uncomment below and update the code to test the property sodium
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property sugars (base name: "sugars")', function () {
      // uncomment below and update the code to test the property sugars
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property carbonFootprintFromKnownIngredientsProduct (base name: "carbon-footprint-from-known-ingredients_product")', function () {
      // uncomment below and update the code to test the property carbonFootprintFromKnownIngredientsProduct
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property carbonFootprintFromKnownIngredientsServing (base name: "carbon-footprint-from-known-ingredients_serving")', function () {
      // uncomment below and update the code to test the property carbonFootprintFromKnownIngredientsServing
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

    it('should have the property erythritol (base name: "erythritol")', function () {
      // uncomment below and update the code to test the property erythritol
      var instance = new OpenFoodFactsOpenApi.ProductNutritionNutriments();
      //expect(instance).to.be();
    });

  });

}));
