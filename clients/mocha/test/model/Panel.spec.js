/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function (expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new OpenFoodFactsOpenApi.Panel();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Panel', function () {
    it('should create an instance of Panel', function () {
      // uncomment below and update the code to test Panel
      var instance = new OpenFoodFactsOpenApi.Panel();
      expect(instance).to.be.a(OpenFoodFactsOpenApi.Panel);
    });

    it('should have the property type (base name: "type")', function () {
      // uncomment below and update the code to test the property type
      var instance = new OpenFoodFactsOpenApi.Panel();
      //expect(instance).to.be();
    });

    it('should have the property expanded (base name: "expanded")', function () {
      // uncomment below and update the code to test the property expanded
      var instance = new OpenFoodFactsOpenApi.Panel();
      //expect(instance).to.be();
    });

    it('should have the property expandFor (base name: "expand_for")', function () {
      // uncomment below and update the code to test the property expandFor
      var instance = new OpenFoodFactsOpenApi.Panel();
      //expect(instance).to.be();
    });

    it('should have the property titleElement (base name: "title_element")', function () {
      // uncomment below and update the code to test the property titleElement
      var instance = new OpenFoodFactsOpenApi.Panel();
      //expect(instance).to.be();
    });

    it('should have the property elements (base name: "elements")', function () {
      // uncomment below and update the code to test the property elements
      var instance = new OpenFoodFactsOpenApi.Panel();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "level")', function () {
      // uncomment below and update the code to test the property level
      var instance = new OpenFoodFactsOpenApi.Panel();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function () {
      // uncomment below and update the code to test the property size
      var instance = new OpenFoodFactsOpenApi.Panel();
      //expect(instance).to.be();
    });

    it('should have the property topics (base name: "topics")', function () {
      // uncomment below and update the code to test the property topics
      var instance = new OpenFoodFactsOpenApi.Panel();
      //expect(instance).to.be();
    });

  });

}));
