/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PackagingComponentRecyclingInstruction model module.
 * @module model/PackagingComponentRecyclingInstruction
 * @version 2
 */
class PackagingComponentRecyclingInstruction {
    /**
     * Constructs a new <code>PackagingComponentRecyclingInstruction</code>.
     * The recycling property is canonicalized using the packaging_recycling taxonomy.
     * @alias module:model/PackagingComponentRecyclingInstruction
     */
    constructor() { 
        
        PackagingComponentRecyclingInstruction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PackagingComponentRecyclingInstruction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PackagingComponentRecyclingInstruction} obj Optional instance to populate.
     * @return {module:model/PackagingComponentRecyclingInstruction} The populated <code>PackagingComponentRecyclingInstruction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PackagingComponentRecyclingInstruction();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lc_name')) {
                obj['lc_name'] = ApiClient.convertToType(data['lc_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PackagingComponentRecyclingInstruction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PackagingComponentRecyclingInstruction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lc_name'] && !(typeof data['lc_name'] === 'string' || data['lc_name'] instanceof String)) {
            throw new Error("Expected the field `lc_name` to be a primitive type in the JSON string but got " + data['lc_name']);
        }

        return true;
    }


}



/**
 * Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon.
 * @member {String} id
 */
PackagingComponentRecyclingInstruction.prototype['id'] = undefined;

/**
 * Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon.
 * @member {String} lc_name
 */
PackagingComponentRecyclingInstruction.prototype['lc_name'] = undefined;






export default PackagingComponentRecyclingInstruction;

