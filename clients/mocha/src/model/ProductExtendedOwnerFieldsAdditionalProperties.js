/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductExtendedOwnerFieldsAdditionalProperties model module.
 * @module model/ProductExtendedOwnerFieldsAdditionalProperties
 * @version 2
 */
class ProductExtendedOwnerFieldsAdditionalProperties {
    /**
     * Constructs a new <code>ProductExtendedOwnerFieldsAdditionalProperties</code>.
     * you can retrieve all kind of properties, the same as on the parent object (the product). It&#39;s not processed entries (like tags for example) but raw ones. 
     * @alias module:model/ProductExtendedOwnerFieldsAdditionalProperties
     * @param {(module:model/Number|module:model/Object|module:model/String)} instance The actual instance to initialize ProductExtendedOwnerFieldsAdditionalProperties.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            // validate integer
            if (!(typeof instance === 'number' && instance % 1 === 0)) {
                throw new Error("Invalid value. Must be integer. Input: " + JSON.stringify(instance));
            }
            this.actualInstance = instance;
            match++;
        } catch(err) {
            // json data failed to deserialize into Number
            errorMessages.push("Failed to construct Number: " + err)
        }

        try {
            // validate string
            if (!(typeof instance === 'string')) {
                throw new Error("Invalid value. Must be string. Input: " + JSON.stringify(instance));
            }
            this.actualInstance = instance;
            match++;
        } catch(err) {
            // json data failed to deserialize into String
            errorMessages.push("Failed to construct String: " + err)
        }

        try {
            this.actualInstance = instance;
            match++;
        } catch(err) {
            // json data failed to deserialize into Object
            errorMessages.push("Failed to construct Object: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ProductExtendedOwnerFieldsAdditionalProperties` with oneOf schemas Number, Object, String. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ProductExtendedOwnerFieldsAdditionalProperties` with oneOf schemas Number, Object, String. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ProductExtendedOwnerFieldsAdditionalProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductExtendedOwnerFieldsAdditionalProperties} obj Optional instance to populate.
     * @return {module:model/ProductExtendedOwnerFieldsAdditionalProperties} The populated <code>ProductExtendedOwnerFieldsAdditionalProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ProductExtendedOwnerFieldsAdditionalProperties(data);
    }

    /**
     * Gets the actual instance, which can be <code>Number</code>, <code>Object</code>, <code>String</code>.
     * @return {(module:model/Number|module:model/Object|module:model/String)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>Number</code>, <code>Object</code>, <code>String</code>.
     * @param {(module:model/Number|module:model/Object|module:model/String)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ProductExtendedOwnerFieldsAdditionalProperties.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ProductExtendedOwnerFieldsAdditionalProperties from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ProductExtendedOwnerFieldsAdditionalProperties} An instance of ProductExtendedOwnerFieldsAdditionalProperties.
     */
    static fromJSON = function(json_string){
        return ProductExtendedOwnerFieldsAdditionalProperties.constructFromObject(JSON.parse(json_string));
    }
}


ProductExtendedOwnerFieldsAdditionalProperties.OneOf = ["Number", "Object", "String"];

export default ProductExtendedOwnerFieldsAdditionalProperties;

