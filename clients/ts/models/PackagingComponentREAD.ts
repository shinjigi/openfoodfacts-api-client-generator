/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * OpenAPI spec version: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Each packaging component has different properties to specify how many there are, its shape, material etc.  The shape, material and recycling properties are mapped to one entry in the packaging_shapes, packaging_materials and packaging_recycling taxonomies, and the value of the property is the canonical name of the taxonomy entry (e.g. en:bottle).  They may contain values that could not yet get matched to their respective taxonomy, in which case they will contain a free text value prefixed with the language code of this text value (e.g. \"fr:Bouteille sph√©rique\" might have been entered by a French user to indicate it is a spherical bottle).
*/
export class PackagingComponentREAD {
    /**
    * umber of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)
    */
    'number_of_units'?: number;
    'shape'?: string;
    'material'?: string;
    'recycling'?: string;
    /**
    * Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)
    */
    'quantity_per_unit'?: string;
    /**
    * Value parsed from the quantity field.
    */
    'quantity_per_unit_value'?: number;
    /**
    * Unit parsed and normalized from the quantity field.
    */
    'quantity_per_unit_unit'?: string;
    /**
    * Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component).
    */
    'weight_specified'?: number;
    /**
    * Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component).
    */
    'weight_measured'?: number;
    /**
    * Weight (as estimated from similar products) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component).
    */
    'weight_estimated'?: number;
    /**
    * Weight of one unit of the empty packaging component.
    */
    'weight'?: number;
    /**
    * Indicates which field was used to populate the \"weight\" field. Either \"specified\", \"measured\", or \"estimated\"
    */
    'weight_source_id'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "number_of_units",
            "baseName": "number_of_units",
            "type": "number",
            "format": ""
        },
        {
            "name": "shape",
            "baseName": "shape",
            "type": "string",
            "format": ""
        },
        {
            "name": "material",
            "baseName": "material",
            "type": "string",
            "format": ""
        },
        {
            "name": "recycling",
            "baseName": "recycling",
            "type": "string",
            "format": ""
        },
        {
            "name": "quantity_per_unit",
            "baseName": "quantity_per_unit",
            "type": "string",
            "format": ""
        },
        {
            "name": "quantity_per_unit_value",
            "baseName": "quantity_per_unit_value",
            "type": "number",
            "format": ""
        },
        {
            "name": "quantity_per_unit_unit",
            "baseName": "quantity_per_unit_unit",
            "type": "string",
            "format": ""
        },
        {
            "name": "weight_specified",
            "baseName": "weight_specified",
            "type": "number",
            "format": ""
        },
        {
            "name": "weight_measured",
            "baseName": "weight_measured",
            "type": "number",
            "format": ""
        },
        {
            "name": "weight_estimated",
            "baseName": "weight_estimated",
            "type": "number",
            "format": ""
        },
        {
            "name": "weight",
            "baseName": "weight",
            "type": "number",
            "format": ""
        },
        {
            "name": "weight_source_id",
            "baseName": "weight_source_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PackagingComponentREAD.attributeTypeMap;
    }

    public constructor() {
    }
}
