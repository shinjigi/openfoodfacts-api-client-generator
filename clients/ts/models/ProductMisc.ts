/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * OpenAPI spec version: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PackagingComponentREAD } from '../models/PackagingComponentREAD';
import { ProductMiscNutrientLevels } from '../models/ProductMiscNutrientLevels';
import { HttpFile } from '../http/http';

/**
* Miscellaneous but important fields of a product 
*/
export class ProductMisc {
    /**
    * Number of food additives. 
    */
    'additives_n'?: number;
    'checked'?: string;
    'complete'?: number;
    'completeness'?: number;
    /**
    * See also: `ecoscore_tags` 
    */
    'ecoscore_grade'?: string;
    /**
    * See also: `ecoscore_tags` 
    */
    'ecoscore_score'?: number;
    'food_groups'?: string;
    'food_groups_tags'?: Array<string>;
    'nutrient_levels'?: ProductMiscNutrientLevels;
    /**
    * Recycling instructions as raw text, e.g. Plastic bottle to recycle, Plastic cap to recycle. This will get automatically parsed and will be used to compute the Eco-Score. You can either request it (if it exists) or send it in a specific language. 
    */
    'packaging_text'?: string;
    /**
    * The packagings object is an array of individual packaging component objects.  The Packaging data document explains how packaging data is structured in Open Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/  The shape, material and recycling properties of each packaging component are linked to entries in the packaging_shapes, packaging_materials and packaging_recycling taxonomies:  https://world.openfoodfacts.org/data/taxonomies/packaging_shapes.json https://world.openfoodfacts.org/data/taxonomies/packaging_materials.json https://world.openfoodfacts.org/data/taxonomies/packaging_recycling.json  If the tags_lc field is set, the properties will include a lc_name field with the translation in the requested language.
    */
    'packagings'?: Array<PackagingComponentREAD>;
    /**
    * Indicate if the packagings array contains all the packaging parts of the product. This field can be set by users when they enter or verify packaging data. Possible values are 0 or 1.
    */
    'packagings_complete'?: number;
    /**
    * Category of food according to [French Nutrition and Health Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9) 
    */
    'pnns_groups_1'?: string;
    'pnns_groups_1_tags'?: Array<string>;
    /**
    * Sub Category of food according to [French Nutrition and Health Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9) 
    */
    'pnns_groups_2'?: string;
    'pnns_groups_2_tags'?: Array<string>;
    /**
    * An imprecise measurement of popularity based on Scan statistics. A higher value means higher popularity. 
    */
    'popularity_key'?: number;
    /**
    * Indicators for the popularity of a product, like the amount of scans in a specific year. 
    */
    'popularity_tags'?: Array<string>;
    'scans_n'?: number;
    'unique_scans_n'?: number;
    /**
    * Normalized version of serving_size. Note that this is NOT the number of servings by product. <small>(in perl, see `normalize_serving_size`)</small> 
    */
    'serving_quantity'?: string;
    /**
    * The unit (either g or ml) for the correponding serving_quantity. 
    */
    'serving_quantity_unit'?: string;
    /**
    * Serving size text (generally in g or ml). We expect a quantity + unit but the user is free to input any string. 
    */
    'serving_size'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "additives_n",
            "baseName": "additives_n",
            "type": "number",
            "format": ""
        },
        {
            "name": "checked",
            "baseName": "checked",
            "type": "string",
            "format": ""
        },
        {
            "name": "complete",
            "baseName": "complete",
            "type": "number",
            "format": ""
        },
        {
            "name": "completeness",
            "baseName": "completeness",
            "type": "number",
            "format": ""
        },
        {
            "name": "ecoscore_grade",
            "baseName": "ecoscore_grade",
            "type": "string",
            "format": ""
        },
        {
            "name": "ecoscore_score",
            "baseName": "ecoscore_score",
            "type": "number",
            "format": ""
        },
        {
            "name": "food_groups",
            "baseName": "food_groups",
            "type": "string",
            "format": ""
        },
        {
            "name": "food_groups_tags",
            "baseName": "food_groups_tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "nutrient_levels",
            "baseName": "nutrient_levels",
            "type": "ProductMiscNutrientLevels",
            "format": ""
        },
        {
            "name": "packaging_text",
            "baseName": "packaging_text",
            "type": "string",
            "format": ""
        },
        {
            "name": "packagings",
            "baseName": "packagings",
            "type": "Array<PackagingComponentREAD>",
            "format": ""
        },
        {
            "name": "packagings_complete",
            "baseName": "packagings_complete",
            "type": "number",
            "format": ""
        },
        {
            "name": "pnns_groups_1",
            "baseName": "pnns_groups_1",
            "type": "string",
            "format": ""
        },
        {
            "name": "pnns_groups_1_tags",
            "baseName": "pnns_groups_1_tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "pnns_groups_2",
            "baseName": "pnns_groups_2",
            "type": "string",
            "format": ""
        },
        {
            "name": "pnns_groups_2_tags",
            "baseName": "pnns_groups_2_tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "popularity_key",
            "baseName": "popularity_key",
            "type": "number",
            "format": ""
        },
        {
            "name": "popularity_tags",
            "baseName": "popularity_tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "scans_n",
            "baseName": "scans_n",
            "type": "number",
            "format": ""
        },
        {
            "name": "unique_scans_n",
            "baseName": "unique_scans_n",
            "type": "number",
            "format": ""
        },
        {
            "name": "serving_quantity",
            "baseName": "serving_quantity",
            "type": "string",
            "format": ""
        },
        {
            "name": "serving_quantity_unit",
            "baseName": "serving_quantity_unit",
            "type": "string",
            "format": ""
        },
        {
            "name": "serving_size",
            "baseName": "serving_size",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ProductMisc.attributeTypeMap;
    }

    public constructor() {
    }
}
