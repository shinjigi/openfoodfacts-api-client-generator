/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Panel from './Panel';

/**
 * The Panels model module.
 * @module model/Panels
 * @version 2
 */
class Panels {
    /**
     * Constructs a new <code>Panels</code>.
     * The panels object is a dictionary of individual panel objects. Each key of the dictionary is the id of the panel, and the value is the panel object.  Apps typically display a number of root panels with known panel ids (e.g. health_card and environment_card). Panels can reference other panels and display them as sub-panels.
     * @alias module:model/Panels
     */
    constructor() { 
        
        Panels.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Panels</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Panels} obj Optional instance to populate.
     * @return {module:model/Panels} The populated <code>Panels</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Panels();

            if (data.hasOwnProperty('additionalProperties')) {
                obj['additionalProperties'] = Panel.constructFromObject(data['additionalProperties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Panels</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Panels</code>.
     */
    static validateJSON(data) {
        // validate the optional field `additionalProperties`
        if (data['additionalProperties']) { // data not null
          Panel.validateJSON(data['additionalProperties']);
        }

        return true;
    }


}



/**
 * @member {module:model/Panel} additionalProperties
 */
Panels.prototype['additionalProperties'] = undefined;






export default Panels;

