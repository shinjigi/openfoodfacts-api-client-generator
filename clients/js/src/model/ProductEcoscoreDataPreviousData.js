/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductEcoscoreDataAgribalyse from './ProductEcoscoreDataAgribalyse';

/**
 * The ProductEcoscoreDataPreviousData model module.
 * @module model/ProductEcoscoreDataPreviousData
 * @version 2
 */
class ProductEcoscoreDataPreviousData {
    /**
     * Constructs a new <code>ProductEcoscoreDataPreviousData</code>.
     * @alias module:model/ProductEcoscoreDataPreviousData
     */
    constructor() { 
        
        ProductEcoscoreDataPreviousData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductEcoscoreDataPreviousData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductEcoscoreDataPreviousData} obj Optional instance to populate.
     * @return {module:model/ProductEcoscoreDataPreviousData} The populated <code>ProductEcoscoreDataPreviousData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductEcoscoreDataPreviousData();

            if (data.hasOwnProperty('grade')) {
                obj['grade'] = ApiClient.convertToType(data['grade'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('agribalyse')) {
                obj['agribalyse'] = ProductEcoscoreDataAgribalyse.constructFromObject(data['agribalyse']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductEcoscoreDataPreviousData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductEcoscoreDataPreviousData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['grade'] && !(typeof data['grade'] === 'string' || data['grade'] instanceof String)) {
            throw new Error("Expected the field `grade` to be a primitive type in the JSON string but got " + data['grade']);
        }
        // validate the optional field `agribalyse`
        if (data['agribalyse']) { // data not null
          ProductEcoscoreDataAgribalyse.validateJSON(data['agribalyse']);
        }

        return true;
    }


}



/**
 * @member {String} grade
 */
ProductEcoscoreDataPreviousData.prototype['grade'] = undefined;

/**
 * @member {Number} score
 */
ProductEcoscoreDataPreviousData.prototype['score'] = undefined;

/**
 * @member {module:model/ProductEcoscoreDataAgribalyse} agribalyse
 */
ProductEcoscoreDataPreviousData.prototype['agribalyse'] = undefined;






export default ProductEcoscoreDataPreviousData;

