/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.TextElement();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TextElement', function() {
    it('should create an instance of TextElement', function() {
      // uncomment below and update the code to test TextElement
      var instance = new OpenFoodFactsOpenApi.TextElement();
      expect(instance).to.be.a(OpenFoodFactsOpenApi.TextElement);
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property html (base name: "html")', function() {
      // uncomment below and update the code to test the property html
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property lc (base name: "lc")', function() {
      // uncomment below and update the code to test the property lc
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property editFieldId (base name: "edit_field_id")', function() {
      // uncomment below and update the code to test the property editFieldId
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property editFieldType (base name: "edit_field_type")', function() {
      // uncomment below and update the code to test the property editFieldType
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property editFieldValue (base name: "edit_field_value")', function() {
      // uncomment below and update the code to test the property editFieldValue
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property sourceUrl (base name: "source_url")', function() {
      // uncomment below and update the code to test the property sourceUrl
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property sourceText (base name: "source_text")', function() {
      // uncomment below and update the code to test the property sourceText
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property sourceLc (base name: "source_lc")', function() {
      // uncomment below and update the code to test the property sourceLc
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

    it('should have the property sourceLanguage (base name: "source_language")', function() {
      // uncomment below and update the code to test the property sourceLanguage
      var instance = new OpenFoodFactsOpenApi.TextElement();
      //expect(instance).to.be();
    });

  });

}));
