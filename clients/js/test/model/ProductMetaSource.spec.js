/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.ProductMetaSource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductMetaSource', function() {
    it('should create an instance of ProductMetaSource', function() {
      // uncomment below and update the code to test ProductMetaSource
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      expect(instance).to.be.a(OpenFoodFactsOpenApi.ProductMetaSource);
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

    it('should have the property importT (base name: "import_t")', function() {
      // uncomment below and update the code to test the property importT
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

    it('should have the property manufacturer (base name: "manufacturer")', function() {
      // uncomment below and update the code to test the property manufacturer
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

    it('should have the property sourceLicence (base name: "source_licence")', function() {
      // uncomment below and update the code to test the property sourceLicence
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

    it('should have the property sourceLicenceUrl (base name: "source_licence_url")', function() {
      // uncomment below and update the code to test the property sourceLicenceUrl
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      var instance = new OpenFoodFactsOpenApi.ProductMetaSource();
      //expect(instance).to.be();
    });

  });

}));
