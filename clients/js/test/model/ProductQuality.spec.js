/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.ProductQuality();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductQuality', function() {
    it('should create an instance of ProductQuality', function() {
      // uncomment below and update the code to test ProductQuality
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be.a(OpenFoodFactsOpenApi.ProductQuality);
    });

    it('should have the property data_quality_bugs_tags (base name: "data_quality_bugs_tags")', function() {
      // uncomment below and update the code to test the property data_quality_bugs_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property data_quality_errors_tags (base name: "data_quality_errors_tags")', function() {
      // uncomment below and update the code to test the property data_quality_errors_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property data_quality_info_tags (base name: "data_quality_info_tags")', function() {
      // uncomment below and update the code to test the property data_quality_info_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property data_quality_tags (base name: "data_quality_tags")', function() {
      // uncomment below and update the code to test the property data_quality_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property data_quality_warnings_tags (base name: "data_quality_warnings_tags")', function() {
      // uncomment below and update the code to test the property data_quality_warnings_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property data_sources (base name: "data_sources")', function() {
      // uncomment below and update the code to test the property data_sources
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property data_sources_tags (base name: "data_sources_tags")', function() {
      // uncomment below and update the code to test the property data_sources_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property last_check_dates_tags (base name: "last_check_dates_tags")', function() {
      // uncomment below and update the code to test the property last_check_dates_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property last_checked_t (base name: "last_checked_t")', function() {
      // uncomment below and update the code to test the property last_checked_t
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property last_checker (base name: "last_checker")', function() {
      // uncomment below and update the code to test the property last_checker
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property states (base name: "states")', function() {
      // uncomment below and update the code to test the property states
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property states_hierarchy (base name: "states_hierarchy")', function() {
      // uncomment below and update the code to test the property states_hierarchy
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property states_tags (base name: "states_tags")', function() {
      // uncomment below and update the code to test the property states_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

    it('should have the property misc_tags (base name: "misc_tags")', function() {
      // uncomment below and update the code to test the property misc_tags
      //var instance = new OpenFoodFactsOpenApi.ProductQuality();
      //expect(instance).to.be();
    });

  });

}));
