/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.ProductTags();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductTags', function() {
    it('should create an instance of ProductTags', function() {
      // uncomment below and update the code to test ProductTags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be.a(OpenFoodFactsOpenApi.ProductTags);
    });

    it('should have the property brands (base name: "brands")', function() {
      // uncomment below and update the code to test the property brands
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property brands_tags (base name: "brands_tags")', function() {
      // uncomment below and update the code to test the property brands_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property categories_hierarchy (base name: "categories_hierarchy")', function() {
      // uncomment below and update the code to test the property categories_hierarchy
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property categories_lc (base name: "categories_lc")', function() {
      // uncomment below and update the code to test the property categories_lc
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property categories_tags (base name: "categories_tags")', function() {
      // uncomment below and update the code to test the property categories_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property checkers_tags (base name: "checkers_tags")', function() {
      // uncomment below and update the code to test the property checkers_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property cities (base name: "cities")', function() {
      // uncomment below and update the code to test the property cities
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property cities_tags (base name: "cities_tags")', function() {
      // uncomment below and update the code to test the property cities_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property correctors_tags (base name: "correctors_tags")', function() {
      // uncomment below and update the code to test the property correctors_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property countries (base name: "countries")', function() {
      // uncomment below and update the code to test the property countries
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property countries_hierarchy (base name: "countries_hierarchy")', function() {
      // uncomment below and update the code to test the property countries_hierarchy
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property countries_lc (base name: "countries_lc")', function() {
      // uncomment below and update the code to test the property countries_lc
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property countries_tags (base name: "countries_tags")', function() {
      // uncomment below and update the code to test the property countries_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property ecoscore_tags (base name: "ecoscore_tags")', function() {
      // uncomment below and update the code to test the property ecoscore_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property emb_codes (base name: "emb_codes")', function() {
      // uncomment below and update the code to test the property emb_codes
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property emb_codes_orig (base name: "emb_codes_orig")', function() {
      // uncomment below and update the code to test the property emb_codes_orig
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property emb_codes_tags (base name: "emb_codes_tags")', function() {
      // uncomment below and update the code to test the property emb_codes_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property labels_hierarchy (base name: "labels_hierarchy")', function() {
      // uncomment below and update the code to test the property labels_hierarchy
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property labels_lc (base name: "labels_lc")', function() {
      // uncomment below and update the code to test the property labels_lc
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property labels_tags (base name: "labels_tags")', function() {
      // uncomment below and update the code to test the property labels_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property entry_dates_tags (base name: "entry_dates_tags")', function() {
      // uncomment below and update the code to test the property entry_dates_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property manufacturing_places (base name: "manufacturing_places")', function() {
      // uncomment below and update the code to test the property manufacturing_places
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property manufacturing_places_tags (base name: "manufacturing_places_tags")', function() {
      // uncomment below and update the code to test the property manufacturing_places_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property nova_groups_tags (base name: "nova_groups_tags")', function() {
      // uncomment below and update the code to test the property nova_groups_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

    it('should have the property nutrient_levels_tags (base name: "nutrient_levels_tags")', function() {
      // uncomment below and update the code to test the property nutrient_levels_tags
      //var instance = new OpenFoodFactsOpenApi.ProductTags();
      //expect(instance).to.be();
    });

  });

}));
