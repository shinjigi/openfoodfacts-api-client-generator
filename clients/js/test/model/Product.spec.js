/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.Product();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Product', function() {
    it('should create an instance of Product', function() {
      // uncomment below and update the code to test Product
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be.a(OpenFoodFactsOpenApi.Product);
    });

    it('should have the property abbreviated_product_name (base name: "abbreviated_product_name")', function() {
      // uncomment below and update the code to test the property abbreviated_product_name
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property codes_tags (base name: "codes_tags")', function() {
      // uncomment below and update the code to test the property codes_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property generic_name (base name: "generic_name")', function() {
      // uncomment below and update the code to test the property generic_name
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property lc (base name: "lc")', function() {
      // uncomment below and update the code to test the property lc
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property lang (base name: "lang")', function() {
      // uncomment below and update the code to test the property lang
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nova_group (base name: "nova_group")', function() {
      // uncomment below and update the code to test the property nova_group
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nova_groups (base name: "nova_groups")', function() {
      // uncomment below and update the code to test the property nova_groups
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property obsolete (base name: "obsolete")', function() {
      // uncomment below and update the code to test the property obsolete
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property obsolete_since_date (base name: "obsolete_since_date")', function() {
      // uncomment below and update the code to test the property obsolete_since_date
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property product_name (base name: "product_name")', function() {
      // uncomment below and update the code to test the property product_name
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property product_name_en (base name: "product_name_en")', function() {
      // uncomment below and update the code to test the property product_name_en
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property product_quantity (base name: "product_quantity")', function() {
      // uncomment below and update the code to test the property product_quantity
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property product_quantity_unit (base name: "product_quantity_unit")', function() {
      // uncomment below and update the code to test the property product_quantity_unit
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property additives_n (base name: "additives_n")', function() {
      // uncomment below and update the code to test the property additives_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property checked (base name: "checked")', function() {
      // uncomment below and update the code to test the property checked
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property complete (base name: "complete")', function() {
      // uncomment below and update the code to test the property complete
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property completeness (base name: "completeness")', function() {
      // uncomment below and update the code to test the property completeness
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ecoscore_grade (base name: "ecoscore_grade")', function() {
      // uncomment below and update the code to test the property ecoscore_grade
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ecoscore_score (base name: "ecoscore_score")', function() {
      // uncomment below and update the code to test the property ecoscore_score
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property food_groups (base name: "food_groups")', function() {
      // uncomment below and update the code to test the property food_groups
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property food_groups_tags (base name: "food_groups_tags")', function() {
      // uncomment below and update the code to test the property food_groups_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrient_levels (base name: "nutrient_levels")', function() {
      // uncomment below and update the code to test the property nutrient_levels
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property packaging_text (base name: "packaging_text")', function() {
      // uncomment below and update the code to test the property packaging_text
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property packagings (base name: "packagings")', function() {
      // uncomment below and update the code to test the property packagings
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property packagings_complete (base name: "packagings_complete")', function() {
      // uncomment below and update the code to test the property packagings_complete
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property pnns_groups_1 (base name: "pnns_groups_1")', function() {
      // uncomment below and update the code to test the property pnns_groups_1
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property pnns_groups_1_tags (base name: "pnns_groups_1_tags")', function() {
      // uncomment below and update the code to test the property pnns_groups_1_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property pnns_groups_2 (base name: "pnns_groups_2")', function() {
      // uncomment below and update the code to test the property pnns_groups_2
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property pnns_groups_2_tags (base name: "pnns_groups_2_tags")', function() {
      // uncomment below and update the code to test the property pnns_groups_2_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property popularity_key (base name: "popularity_key")', function() {
      // uncomment below and update the code to test the property popularity_key
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property popularity_tags (base name: "popularity_tags")', function() {
      // uncomment below and update the code to test the property popularity_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property scans_n (base name: "scans_n")', function() {
      // uncomment below and update the code to test the property scans_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property unique_scans_n (base name: "unique_scans_n")', function() {
      // uncomment below and update the code to test the property unique_scans_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property serving_quantity (base name: "serving_quantity")', function() {
      // uncomment below and update the code to test the property serving_quantity
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property serving_quantity_unit (base name: "serving_quantity_unit")', function() {
      // uncomment below and update the code to test the property serving_quantity_unit
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property serving_size (base name: "serving_size")', function() {
      // uncomment below and update the code to test the property serving_size
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property brands (base name: "brands")', function() {
      // uncomment below and update the code to test the property brands
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property brands_tags (base name: "brands_tags")', function() {
      // uncomment below and update the code to test the property brands_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property categories_hierarchy (base name: "categories_hierarchy")', function() {
      // uncomment below and update the code to test the property categories_hierarchy
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property categories_lc (base name: "categories_lc")', function() {
      // uncomment below and update the code to test the property categories_lc
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property categories_tags (base name: "categories_tags")', function() {
      // uncomment below and update the code to test the property categories_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property checkers_tags (base name: "checkers_tags")', function() {
      // uncomment below and update the code to test the property checkers_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property cities (base name: "cities")', function() {
      // uncomment below and update the code to test the property cities
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property cities_tags (base name: "cities_tags")', function() {
      // uncomment below and update the code to test the property cities_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property correctors_tags (base name: "correctors_tags")', function() {
      // uncomment below and update the code to test the property correctors_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property countries (base name: "countries")', function() {
      // uncomment below and update the code to test the property countries
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property countries_hierarchy (base name: "countries_hierarchy")', function() {
      // uncomment below and update the code to test the property countries_hierarchy
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property countries_lc (base name: "countries_lc")', function() {
      // uncomment below and update the code to test the property countries_lc
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property countries_tags (base name: "countries_tags")', function() {
      // uncomment below and update the code to test the property countries_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ecoscore_tags (base name: "ecoscore_tags")', function() {
      // uncomment below and update the code to test the property ecoscore_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property emb_codes (base name: "emb_codes")', function() {
      // uncomment below and update the code to test the property emb_codes
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property emb_codes_orig (base name: "emb_codes_orig")', function() {
      // uncomment below and update the code to test the property emb_codes_orig
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property emb_codes_tags (base name: "emb_codes_tags")', function() {
      // uncomment below and update the code to test the property emb_codes_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property labels_hierarchy (base name: "labels_hierarchy")', function() {
      // uncomment below and update the code to test the property labels_hierarchy
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property labels_lc (base name: "labels_lc")', function() {
      // uncomment below and update the code to test the property labels_lc
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property labels_tags (base name: "labels_tags")', function() {
      // uncomment below and update the code to test the property labels_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property entry_dates_tags (base name: "entry_dates_tags")', function() {
      // uncomment below and update the code to test the property entry_dates_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property manufacturing_places (base name: "manufacturing_places")', function() {
      // uncomment below and update the code to test the property manufacturing_places
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property manufacturing_places_tags (base name: "manufacturing_places_tags")', function() {
      // uncomment below and update the code to test the property manufacturing_places_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nova_groups_tags (base name: "nova_groups_tags")', function() {
      // uncomment below and update the code to test the property nova_groups_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrient_levels_tags (base name: "nutrient_levels_tags")', function() {
      // uncomment below and update the code to test the property nutrient_levels_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property last_image_dates_tags (base name: "last_image_dates_tags")', function() {
      // uncomment below and update the code to test the property last_image_dates_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property last_image_t (base name: "last_image_t")', function() {
      // uncomment below and update the code to test the property last_image_t
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property selected_images (base name: "selected_images")', function() {
      // uncomment below and update the code to test the property selected_images
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property image_small_url (base name: "image_small_url")', function() {
      // uncomment below and update the code to test the property image_small_url
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property image_thumb_url (base name: "image_thumb_url")', function() {
      // uncomment below and update the code to test the property image_thumb_url
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property image_url (base name: "image_url")', function() {
      // uncomment below and update the code to test the property image_url
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ecoscore_data (base name: "ecoscore_data")', function() {
      // uncomment below and update the code to test the property ecoscore_data
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ecoscore_extended_data_version (base name: "ecoscore_extended_data_version")', function() {
      // uncomment below and update the code to test the property ecoscore_extended_data_version
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property environment_impact_level (base name: "environment_impact_level")', function() {
      // uncomment below and update the code to test the property environment_impact_level
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property environment_impact_level_tags (base name: "environment_impact_level_tags")', function() {
      // uncomment below and update the code to test the property environment_impact_level_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property additives_tags (base name: "additives_tags")', function() {
      // uncomment below and update the code to test the property additives_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property allergens (base name: "allergens")', function() {
      // uncomment below and update the code to test the property allergens
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property allergens_lc (base name: "allergens_lc")', function() {
      // uncomment below and update the code to test the property allergens_lc
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property allergens_hierarchy (base name: "allergens_hierarchy")', function() {
      // uncomment below and update the code to test the property allergens_hierarchy
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property allergens_tags (base name: "allergens_tags")', function() {
      // uncomment below and update the code to test the property allergens_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients (base name: "ingredients")', function() {
      // uncomment below and update the code to test the property ingredients
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_analysis (base name: "ingredients_analysis")', function() {
      // uncomment below and update the code to test the property ingredients_analysis
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_analysis_tags (base name: "ingredients_analysis_tags")', function() {
      // uncomment below and update the code to test the property ingredients_analysis_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_from_or_that_may_be_from_palm_oil_n (base name: "ingredients_from_or_that_may_be_from_palm_oil_n")', function() {
      // uncomment below and update the code to test the property ingredients_from_or_that_may_be_from_palm_oil_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_from_palm_oil_n (base name: "ingredients_from_palm_oil_n")', function() {
      // uncomment below and update the code to test the property ingredients_from_palm_oil_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_from_palm_oil_tags (base name: "ingredients_from_palm_oil_tags")', function() {
      // uncomment below and update the code to test the property ingredients_from_palm_oil_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_hierarchy (base name: "ingredients_hierarchy")', function() {
      // uncomment below and update the code to test the property ingredients_hierarchy
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_n (base name: "ingredients_n")', function() {
      // uncomment below and update the code to test the property ingredients_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_n_tags (base name: "ingredients_n_tags")', function() {
      // uncomment below and update the code to test the property ingredients_n_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_original_tags (base name: "ingredients_original_tags")', function() {
      // uncomment below and update the code to test the property ingredients_original_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_percent_analysis (base name: "ingredients_percent_analysis")', function() {
      // uncomment below and update the code to test the property ingredients_percent_analysis
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_sweeteners_n (base name: "ingredients_sweeteners_n")', function() {
      // uncomment below and update the code to test the property ingredients_sweeteners_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_non_nutritive_sweeteners_n (base name: "ingredients_non_nutritive_sweeteners_n")', function() {
      // uncomment below and update the code to test the property ingredients_non_nutritive_sweeteners_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_tags (base name: "ingredients_tags")', function() {
      // uncomment below and update the code to test the property ingredients_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_lc (base name: "ingredients_lc")', function() {
      // uncomment below and update the code to test the property ingredients_lc
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_text (base name: "ingredients_text")', function() {
      // uncomment below and update the code to test the property ingredients_text
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_text_with_allergens (base name: "ingredients_text_with_allergens")', function() {
      // uncomment below and update the code to test the property ingredients_text_with_allergens
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_that_may_be_from_palm_oil_n (base name: "ingredients_that_may_be_from_palm_oil_n")', function() {
      // uncomment below and update the code to test the property ingredients_that_may_be_from_palm_oil_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_that_may_be_from_palm_oil_tags (base name: "ingredients_that_may_be_from_palm_oil_tags")', function() {
      // uncomment below and update the code to test the property ingredients_that_may_be_from_palm_oil_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_with_specified_percent_n (base name: "ingredients_with_specified_percent_n")', function() {
      // uncomment below and update the code to test the property ingredients_with_specified_percent_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_with_specified_percent_sum (base name: "ingredients_with_specified_percent_sum")', function() {
      // uncomment below and update the code to test the property ingredients_with_specified_percent_sum
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_with_unspecified_percent_n (base name: "ingredients_with_unspecified_percent_n")', function() {
      // uncomment below and update the code to test the property ingredients_with_unspecified_percent_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ingredients_with_unspecified_percent_sum (base name: "ingredients_with_unspecified_percent_sum")', function() {
      // uncomment below and update the code to test the property ingredients_with_unspecified_percent_sum
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property known_ingredients_n (base name: "known_ingredients_n")', function() {
      // uncomment below and update the code to test the property known_ingredients_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property origins (base name: "origins")', function() {
      // uncomment below and update the code to test the property origins
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property origins_hierarchy (base name: "origins_hierarchy")', function() {
      // uncomment below and update the code to test the property origins_hierarchy
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property origins_lc (base name: "origins_lc")', function() {
      // uncomment below and update the code to test the property origins_lc
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property origins_tags (base name: "origins_tags")', function() {
      // uncomment below and update the code to test the property origins_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property traces (base name: "traces")', function() {
      // uncomment below and update the code to test the property traces
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property traces_hierarchy (base name: "traces_hierarchy")', function() {
      // uncomment below and update the code to test the property traces_hierarchy
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property traces_lc (base name: "traces_lc")', function() {
      // uncomment below and update the code to test the property traces_lc
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property traces_tags (base name: "traces_tags")', function() {
      // uncomment below and update the code to test the property traces_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property unknown_ingredients_n (base name: "unknown_ingredients_n")', function() {
      // uncomment below and update the code to test the property unknown_ingredients_n
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property no_nutrition_data (base name: "no_nutrition_data")', function() {
      // uncomment below and update the code to test the property no_nutrition_data
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_data_per (base name: "nutrition_data_per")', function() {
      // uncomment below and update the code to test the property nutrition_data_per
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_data_prepared_per (base name: "nutrition_data_prepared_per")', function() {
      // uncomment below and update the code to test the property nutrition_data_prepared_per
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutriments (base name: "nutriments")', function() {
      // uncomment below and update the code to test the property nutriments
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutriscore_data (base name: "nutriscore_data")', function() {
      // uncomment below and update the code to test the property nutriscore_data
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutriscore_grade (base name: "nutriscore_grade")', function() {
      // uncomment below and update the code to test the property nutriscore_grade
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutriscore_score (base name: "nutriscore_score")', function() {
      // uncomment below and update the code to test the property nutriscore_score
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutriscore_score_opposite (base name: "nutriscore_score_opposite")', function() {
      // uncomment below and update the code to test the property nutriscore_score_opposite
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_grade_fr (base name: "nutrition_grade_fr")', function() {
      // uncomment below and update the code to test the property nutrition_grade_fr
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_grades (base name: "nutrition_grades")', function() {
      // uncomment below and update the code to test the property nutrition_grades
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_grades_tags (base name: "nutrition_grades_tags")', function() {
      // uncomment below and update the code to test the property nutrition_grades_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_score_beverage (base name: "nutrition_score_beverage")', function() {
      // uncomment below and update the code to test the property nutrition_score_beverage
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients (base name: "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients")', function() {
      // uncomment below and update the code to test the property nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value (base name: "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value")', function() {
      // uncomment below and update the code to test the property nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nutrition_score_warning_no_fiber (base name: "nutrition_score_warning_no_fiber")', function() {
      // uncomment below and update the code to test the property nutrition_score_warning_no_fiber
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property other_nutritional_substances_tags (base name: "other_nutritional_substances_tags")', function() {
      // uncomment below and update the code to test the property other_nutritional_substances_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property unknown_nutrients_tags (base name: "unknown_nutrients_tags")', function() {
      // uncomment below and update the code to test the property unknown_nutrients_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property vitamins_tags (base name: "vitamins_tags")', function() {
      // uncomment below and update the code to test the property vitamins_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property knowledge_panels (base name: "knowledge_panels")', function() {
      // uncomment below and update the code to test the property knowledge_panels
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property additives_original_tags (base name: "additives_original_tags")', function() {
      // uncomment below and update the code to test the property additives_original_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property additives_prev_original_tags (base name: "additives_prev_original_tags")', function() {
      // uncomment below and update the code to test the property additives_prev_original_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property added_countries_tags (base name: "added_countries_tags")', function() {
      // uncomment below and update the code to test the property added_countries_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property allergens_from_ingredients (base name: "allergens_from_ingredients")', function() {
      // uncomment below and update the code to test the property allergens_from_ingredients
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property allergens_from_user (base name: "allergens_from_user")', function() {
      // uncomment below and update the code to test the property allergens_from_user
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property amino_acids_prev_tags (base name: "amino_acids_prev_tags")', function() {
      // uncomment below and update the code to test the property amino_acids_prev_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property amino_acids_tags (base name: "amino_acids_tags")', function() {
      // uncomment below and update the code to test the property amino_acids_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property carbon_footprint_percent_of_known_ingredients (base name: "carbon_footprint_percent_of_known_ingredients")', function() {
      // uncomment below and update the code to test the property carbon_footprint_percent_of_known_ingredients
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property categories_properties (base name: "categories_properties")', function() {
      // uncomment below and update the code to test the property categories_properties
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property categories_properties_tags (base name: "categories_properties_tags")', function() {
      // uncomment below and update the code to test the property categories_properties_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property category_properties (base name: "category_properties")', function() {
      // uncomment below and update the code to test the property category_properties
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property ciqual_food_name_tags (base name: "ciqual_food_name_tags")', function() {
      // uncomment below and update the code to test the property ciqual_food_name_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property compared_to_category (base name: "compared_to_category")', function() {
      // uncomment below and update the code to test the property compared_to_category
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property conservation_conditions (base name: "conservation_conditions")', function() {
      // uncomment below and update the code to test the property conservation_conditions
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property customer_service (base name: "customer_service")', function() {
      // uncomment below and update the code to test the property customer_service
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property expiration_date (base name: "expiration_date")', function() {
      // uncomment below and update the code to test the property expiration_date
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property main_countries_tags (base name: "main_countries_tags")', function() {
      // uncomment below and update the code to test the property main_countries_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property minerals_prev_tags (base name: "minerals_prev_tags")', function() {
      // uncomment below and update the code to test the property minerals_prev_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property minerals_tags (base name: "minerals_tags")', function() {
      // uncomment below and update the code to test the property minerals_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property owner_fields (base name: "owner_fields")', function() {
      // uncomment below and update the code to test the property owner_fields
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nova_groups_markers (base name: "nova_groups_markers")', function() {
      // uncomment below and update the code to test the property nova_groups_markers
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property nucleotides_tags (base name: "nucleotides_tags")', function() {
      // uncomment below and update the code to test the property nucleotides_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property purchase_places (base name: "purchase_places")', function() {
      // uncomment below and update the code to test the property purchase_places
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property purchase_places_tags (base name: "purchase_places_tags")', function() {
      // uncomment below and update the code to test the property purchase_places_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property stores (base name: "stores")', function() {
      // uncomment below and update the code to test the property stores
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property stores_tags (base name: "stores_tags")', function() {
      // uncomment below and update the code to test the property stores_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property traces_from_ingredients (base name: "traces_from_ingredients")', function() {
      // uncomment below and update the code to test the property traces_from_ingredients
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property traces_from_user (base name: "traces_from_user")', function() {
      // uncomment below and update the code to test the property traces_from_user
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property created_t (base name: "created_t")', function() {
      // uncomment below and update the code to test the property created_t
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property creator (base name: "creator")', function() {
      // uncomment below and update the code to test the property creator
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property editors_tags (base name: "editors_tags")', function() {
      // uncomment below and update the code to test the property editors_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property informers_tags (base name: "informers_tags")', function() {
      // uncomment below and update the code to test the property informers_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property interface_version_created (base name: "interface_version_created")', function() {
      // uncomment below and update the code to test the property interface_version_created
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property interface_version_modified (base name: "interface_version_modified")', function() {
      // uncomment below and update the code to test the property interface_version_modified
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property languages (base name: "languages")', function() {
      // uncomment below and update the code to test the property languages
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property languages_codes (base name: "languages_codes")', function() {
      // uncomment below and update the code to test the property languages_codes
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property languages_hierarchy (base name: "languages_hierarchy")', function() {
      // uncomment below and update the code to test the property languages_hierarchy
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property languages_tags (base name: "languages_tags")', function() {
      // uncomment below and update the code to test the property languages_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property last_edit_dates_tags (base name: "last_edit_dates_tags")', function() {
      // uncomment below and update the code to test the property last_edit_dates_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property last_editor (base name: "last_editor")', function() {
      // uncomment below and update the code to test the property last_editor
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property last_modified_by (base name: "last_modified_by")', function() {
      // uncomment below and update the code to test the property last_modified_by
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property last_modified_t (base name: "last_modified_t")', function() {
      // uncomment below and update the code to test the property last_modified_t
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property owners_tags (base name: "owners_tags")', function() {
      // uncomment below and update the code to test the property owners_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property photographers_tags (base name: "photographers_tags")', function() {
      // uncomment below and update the code to test the property photographers_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property rev (base name: "rev")', function() {
      // uncomment below and update the code to test the property rev
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property sources (base name: "sources")', function() {
      // uncomment below and update the code to test the property sources
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property sources_fields (base name: "sources_fields")', function() {
      // uncomment below and update the code to test the property sources_fields
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property teams (base name: "teams")', function() {
      // uncomment below and update the code to test the property teams
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property teams_tags (base name: "teams_tags")', function() {
      // uncomment below and update the code to test the property teams_tags
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property update_key (base name: "update_key")', function() {
      // uncomment below and update the code to test the property update_key
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property attribute_groups (base name: "attribute_groups")', function() {
      // uncomment below and update the code to test the property attribute_groups
      //var instance = new OpenFoodFactsOpenApi.Product();
      //expect(instance).to.be();
    });

  });

}));
