/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.ProductMisc();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductMisc', function() {
    it('should create an instance of ProductMisc', function() {
      // uncomment below and update the code to test ProductMisc
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be.a(OpenFoodFactsOpenApi.ProductMisc);
    });

    it('should have the property additives_n (base name: "additives_n")', function() {
      // uncomment below and update the code to test the property additives_n
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property checked (base name: "checked")', function() {
      // uncomment below and update the code to test the property checked
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property complete (base name: "complete")', function() {
      // uncomment below and update the code to test the property complete
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property completeness (base name: "completeness")', function() {
      // uncomment below and update the code to test the property completeness
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property ecoscore_grade (base name: "ecoscore_grade")', function() {
      // uncomment below and update the code to test the property ecoscore_grade
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property ecoscore_score (base name: "ecoscore_score")', function() {
      // uncomment below and update the code to test the property ecoscore_score
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property food_groups (base name: "food_groups")', function() {
      // uncomment below and update the code to test the property food_groups
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property food_groups_tags (base name: "food_groups_tags")', function() {
      // uncomment below and update the code to test the property food_groups_tags
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property nutrient_levels (base name: "nutrient_levels")', function() {
      // uncomment below and update the code to test the property nutrient_levels
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property packaging_text (base name: "packaging_text")', function() {
      // uncomment below and update the code to test the property packaging_text
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property packagings (base name: "packagings")', function() {
      // uncomment below and update the code to test the property packagings
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property packagings_complete (base name: "packagings_complete")', function() {
      // uncomment below and update the code to test the property packagings_complete
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property pnns_groups_1 (base name: "pnns_groups_1")', function() {
      // uncomment below and update the code to test the property pnns_groups_1
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property pnns_groups_1_tags (base name: "pnns_groups_1_tags")', function() {
      // uncomment below and update the code to test the property pnns_groups_1_tags
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property pnns_groups_2 (base name: "pnns_groups_2")', function() {
      // uncomment below and update the code to test the property pnns_groups_2
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property pnns_groups_2_tags (base name: "pnns_groups_2_tags")', function() {
      // uncomment below and update the code to test the property pnns_groups_2_tags
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property popularity_key (base name: "popularity_key")', function() {
      // uncomment below and update the code to test the property popularity_key
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property popularity_tags (base name: "popularity_tags")', function() {
      // uncomment below and update the code to test the property popularity_tags
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property scans_n (base name: "scans_n")', function() {
      // uncomment below and update the code to test the property scans_n
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property unique_scans_n (base name: "unique_scans_n")', function() {
      // uncomment below and update the code to test the property unique_scans_n
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property serving_quantity (base name: "serving_quantity")', function() {
      // uncomment below and update the code to test the property serving_quantity
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property serving_quantity_unit (base name: "serving_quantity_unit")', function() {
      // uncomment below and update the code to test the property serving_quantity_unit
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

    it('should have the property serving_size (base name: "serving_size")', function() {
      // uncomment below and update the code to test the property serving_size
      //var instance = new OpenFoodFactsOpenApi.ProductMisc();
      //expect(instance).to.be();
    });

  });

}));
