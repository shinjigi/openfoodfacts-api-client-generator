/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.ProductBase();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductBase', function() {
    it('should create an instance of ProductBase', function() {
      // uncomment below and update the code to test ProductBase
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      expect(instance).to.be.a(OpenFoodFactsOpenApi.ProductBase);
    });

    it('should have the property abbreviatedProductName (base name: "abbreviated_product_name")', function() {
      // uncomment below and update the code to test the property abbreviatedProductName
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property codesTags (base name: "codes_tags")', function() {
      // uncomment below and update the code to test the property codesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property genericName (base name: "generic_name")', function() {
      // uncomment below and update the code to test the property genericName
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lc (base name: "lc")', function() {
      // uncomment below and update the code to test the property lc
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lang (base name: "lang")', function() {
      // uncomment below and update the code to test the property lang
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property novaGroup (base name: "nova_group")', function() {
      // uncomment below and update the code to test the property novaGroup
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property novaGroups (base name: "nova_groups")', function() {
      // uncomment below and update the code to test the property novaGroups
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property obsolete (base name: "obsolete")', function() {
      // uncomment below and update the code to test the property obsolete
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property obsoleteSinceDate (base name: "obsolete_since_date")', function() {
      // uncomment below and update the code to test the property obsoleteSinceDate
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property productName (base name: "product_name")', function() {
      // uncomment below and update the code to test the property productName
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property productNameEn (base name: "product_name_en")', function() {
      // uncomment below and update the code to test the property productNameEn
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property productQuantity (base name: "product_quantity")', function() {
      // uncomment below and update the code to test the property productQuantity
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property productQuantityUnit (base name: "product_quantity_unit")', function() {
      // uncomment below and update the code to test the property productQuantityUnit
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property additivesN (base name: "additives_n")', function() {
      // uncomment below and update the code to test the property additivesN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property checked (base name: "checked")', function() {
      // uncomment below and update the code to test the property checked
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property complete (base name: "complete")', function() {
      // uncomment below and update the code to test the property complete
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property completeness (base name: "completeness")', function() {
      // uncomment below and update the code to test the property completeness
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ecoscoreGrade (base name: "ecoscore_grade")', function() {
      // uncomment below and update the code to test the property ecoscoreGrade
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ecoscoreScore (base name: "ecoscore_score")', function() {
      // uncomment below and update the code to test the property ecoscoreScore
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property foodGroups (base name: "food_groups")', function() {
      // uncomment below and update the code to test the property foodGroups
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property foodGroupsTags (base name: "food_groups_tags")', function() {
      // uncomment below and update the code to test the property foodGroupsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutrientLevels (base name: "nutrient_levels")', function() {
      // uncomment below and update the code to test the property nutrientLevels
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property packagingText (base name: "packaging_text")', function() {
      // uncomment below and update the code to test the property packagingText
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property packagings (base name: "packagings")', function() {
      // uncomment below and update the code to test the property packagings
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property packagingsComplete (base name: "packagings_complete")', function() {
      // uncomment below and update the code to test the property packagingsComplete
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property pnnsGroups1 (base name: "pnns_groups_1")', function() {
      // uncomment below and update the code to test the property pnnsGroups1
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property pnnsGroups1Tags (base name: "pnns_groups_1_tags")', function() {
      // uncomment below and update the code to test the property pnnsGroups1Tags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property pnnsGroups2 (base name: "pnns_groups_2")', function() {
      // uncomment below and update the code to test the property pnnsGroups2
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property pnnsGroups2Tags (base name: "pnns_groups_2_tags")', function() {
      // uncomment below and update the code to test the property pnnsGroups2Tags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property popularityKey (base name: "popularity_key")', function() {
      // uncomment below and update the code to test the property popularityKey
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property popularityTags (base name: "popularity_tags")', function() {
      // uncomment below and update the code to test the property popularityTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property scansN (base name: "scans_n")', function() {
      // uncomment below and update the code to test the property scansN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property uniqueScansN (base name: "unique_scans_n")', function() {
      // uncomment below and update the code to test the property uniqueScansN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property servingQuantity (base name: "serving_quantity")', function() {
      // uncomment below and update the code to test the property servingQuantity
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property servingQuantityUnit (base name: "serving_quantity_unit")', function() {
      // uncomment below and update the code to test the property servingQuantityUnit
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property servingSize (base name: "serving_size")', function() {
      // uncomment below and update the code to test the property servingSize
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property brands (base name: "brands")', function() {
      // uncomment below and update the code to test the property brands
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property brandsTags (base name: "brands_tags")', function() {
      // uncomment below and update the code to test the property brandsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property categoriesHierarchy (base name: "categories_hierarchy")', function() {
      // uncomment below and update the code to test the property categoriesHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property categoriesLc (base name: "categories_lc")', function() {
      // uncomment below and update the code to test the property categoriesLc
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property categoriesTags (base name: "categories_tags")', function() {
      // uncomment below and update the code to test the property categoriesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property checkersTags (base name: "checkers_tags")', function() {
      // uncomment below and update the code to test the property checkersTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property cities (base name: "cities")', function() {
      // uncomment below and update the code to test the property cities
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property citiesTags (base name: "cities_tags")', function() {
      // uncomment below and update the code to test the property citiesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property correctorsTags (base name: "correctors_tags")', function() {
      // uncomment below and update the code to test the property correctorsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property countries (base name: "countries")', function() {
      // uncomment below and update the code to test the property countries
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property countriesHierarchy (base name: "countries_hierarchy")', function() {
      // uncomment below and update the code to test the property countriesHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property countriesLc (base name: "countries_lc")', function() {
      // uncomment below and update the code to test the property countriesLc
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property countriesTags (base name: "countries_tags")', function() {
      // uncomment below and update the code to test the property countriesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ecoscoreTags (base name: "ecoscore_tags")', function() {
      // uncomment below and update the code to test the property ecoscoreTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property embCodes (base name: "emb_codes")', function() {
      // uncomment below and update the code to test the property embCodes
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property embCodesOrig (base name: "emb_codes_orig")', function() {
      // uncomment below and update the code to test the property embCodesOrig
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property embCodesTags (base name: "emb_codes_tags")', function() {
      // uncomment below and update the code to test the property embCodesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property labelsHierarchy (base name: "labels_hierarchy")', function() {
      // uncomment below and update the code to test the property labelsHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property labelsLc (base name: "labels_lc")', function() {
      // uncomment below and update the code to test the property labelsLc
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property labelsTags (base name: "labels_tags")', function() {
      // uncomment below and update the code to test the property labelsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property entryDatesTags (base name: "entry_dates_tags")', function() {
      // uncomment below and update the code to test the property entryDatesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property manufacturingPlaces (base name: "manufacturing_places")', function() {
      // uncomment below and update the code to test the property manufacturingPlaces
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property manufacturingPlacesTags (base name: "manufacturing_places_tags")', function() {
      // uncomment below and update the code to test the property manufacturingPlacesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property novaGroupsTags (base name: "nova_groups_tags")', function() {
      // uncomment below and update the code to test the property novaGroupsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutrientLevelsTags (base name: "nutrient_levels_tags")', function() {
      // uncomment below and update the code to test the property nutrientLevelsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageFrontSmallUrl (base name: "image_front_small_url")', function() {
      // uncomment below and update the code to test the property imageFrontSmallUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageFrontThumbUrl (base name: "image_front_thumb_url")', function() {
      // uncomment below and update the code to test the property imageFrontThumbUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageFrontUrl (base name: "image_front_url")', function() {
      // uncomment below and update the code to test the property imageFrontUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageNutritionSmallUrl (base name: "image_nutrition_small_url")', function() {
      // uncomment below and update the code to test the property imageNutritionSmallUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageNutritionThumbUrl (base name: "image_nutrition_thumb_url")', function() {
      // uncomment below and update the code to test the property imageNutritionThumbUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageNutritionUrl (base name: "image_nutrition_url")', function() {
      // uncomment below and update the code to test the property imageNutritionUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageSmallUrl (base name: "image_small_url")', function() {
      // uncomment below and update the code to test the property imageSmallUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageThumbUrl (base name: "image_thumb_url")', function() {
      // uncomment below and update the code to test the property imageThumbUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property imageUrl (base name: "image_url")', function() {
      // uncomment below and update the code to test the property imageUrl
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastImageDatesTags (base name: "last_image_dates_tags")', function() {
      // uncomment below and update the code to test the property lastImageDatesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastImageT (base name: "last_image_t")', function() {
      // uncomment below and update the code to test the property lastImageT
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property selectedImages (base name: "selected_images")', function() {
      // uncomment below and update the code to test the property selectedImages
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ecoscoreData (base name: "ecoscore_data")', function() {
      // uncomment below and update the code to test the property ecoscoreData
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ecoscoreExtendedDataVersion (base name: "ecoscore_extended_data_version")', function() {
      // uncomment below and update the code to test the property ecoscoreExtendedDataVersion
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property environmentImpactLevel (base name: "environment_impact_level")', function() {
      // uncomment below and update the code to test the property environmentImpactLevel
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property environmentImpactLevelTags (base name: "environment_impact_level_tags")', function() {
      // uncomment below and update the code to test the property environmentImpactLevelTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property additivesTags (base name: "additives_tags")', function() {
      // uncomment below and update the code to test the property additivesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property allergens (base name: "allergens")', function() {
      // uncomment below and update the code to test the property allergens
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property allergensLc (base name: "allergens_lc")', function() {
      // uncomment below and update the code to test the property allergensLc
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property allergensHierarchy (base name: "allergens_hierarchy")', function() {
      // uncomment below and update the code to test the property allergensHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property allergensTags (base name: "allergens_tags")', function() {
      // uncomment below and update the code to test the property allergensTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredients (base name: "ingredients")', function() {
      // uncomment below and update the code to test the property ingredients
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsAnalysis (base name: "ingredients_analysis")', function() {
      // uncomment below and update the code to test the property ingredientsAnalysis
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsAnalysisTags (base name: "ingredients_analysis_tags")', function() {
      // uncomment below and update the code to test the property ingredientsAnalysisTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsFromOrThatMayBeFromPalmOilN (base name: "ingredients_from_or_that_may_be_from_palm_oil_n")', function() {
      // uncomment below and update the code to test the property ingredientsFromOrThatMayBeFromPalmOilN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsFromPalmOilN (base name: "ingredients_from_palm_oil_n")', function() {
      // uncomment below and update the code to test the property ingredientsFromPalmOilN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsFromPalmOilTags (base name: "ingredients_from_palm_oil_tags")', function() {
      // uncomment below and update the code to test the property ingredientsFromPalmOilTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsHierarchy (base name: "ingredients_hierarchy")', function() {
      // uncomment below and update the code to test the property ingredientsHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsN (base name: "ingredients_n")', function() {
      // uncomment below and update the code to test the property ingredientsN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsNTags (base name: "ingredients_n_tags")', function() {
      // uncomment below and update the code to test the property ingredientsNTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsOriginalTags (base name: "ingredients_original_tags")', function() {
      // uncomment below and update the code to test the property ingredientsOriginalTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsPercentAnalysis (base name: "ingredients_percent_analysis")', function() {
      // uncomment below and update the code to test the property ingredientsPercentAnalysis
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsSweetenersN (base name: "ingredients_sweeteners_n")', function() {
      // uncomment below and update the code to test the property ingredientsSweetenersN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsNonNutritiveSweetenersN (base name: "ingredients_non_nutritive_sweeteners_n")', function() {
      // uncomment below and update the code to test the property ingredientsNonNutritiveSweetenersN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsTags (base name: "ingredients_tags")', function() {
      // uncomment below and update the code to test the property ingredientsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsLc (base name: "ingredients_lc")', function() {
      // uncomment below and update the code to test the property ingredientsLc
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsText (base name: "ingredients_text")', function() {
      // uncomment below and update the code to test the property ingredientsText
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsTextWithAllergens (base name: "ingredients_text_with_allergens")', function() {
      // uncomment below and update the code to test the property ingredientsTextWithAllergens
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsThatMayBeFromPalmOilN (base name: "ingredients_that_may_be_from_palm_oil_n")', function() {
      // uncomment below and update the code to test the property ingredientsThatMayBeFromPalmOilN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsThatMayBeFromPalmOilTags (base name: "ingredients_that_may_be_from_palm_oil_tags")', function() {
      // uncomment below and update the code to test the property ingredientsThatMayBeFromPalmOilTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsWithSpecifiedPercentN (base name: "ingredients_with_specified_percent_n")', function() {
      // uncomment below and update the code to test the property ingredientsWithSpecifiedPercentN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsWithSpecifiedPercentSum (base name: "ingredients_with_specified_percent_sum")', function() {
      // uncomment below and update the code to test the property ingredientsWithSpecifiedPercentSum
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsWithUnspecifiedPercentN (base name: "ingredients_with_unspecified_percent_n")', function() {
      // uncomment below and update the code to test the property ingredientsWithUnspecifiedPercentN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ingredientsWithUnspecifiedPercentSum (base name: "ingredients_with_unspecified_percent_sum")', function() {
      // uncomment below and update the code to test the property ingredientsWithUnspecifiedPercentSum
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property knownIngredientsN (base name: "known_ingredients_n")', function() {
      // uncomment below and update the code to test the property knownIngredientsN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property origins (base name: "origins")', function() {
      // uncomment below and update the code to test the property origins
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property originsHierarchy (base name: "origins_hierarchy")', function() {
      // uncomment below and update the code to test the property originsHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property originsLc (base name: "origins_lc")', function() {
      // uncomment below and update the code to test the property originsLc
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property originsTags (base name: "origins_tags")', function() {
      // uncomment below and update the code to test the property originsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property traces (base name: "traces")', function() {
      // uncomment below and update the code to test the property traces
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property tracesHierarchy (base name: "traces_hierarchy")', function() {
      // uncomment below and update the code to test the property tracesHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property tracesLc (base name: "traces_lc")', function() {
      // uncomment below and update the code to test the property tracesLc
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property tracesTags (base name: "traces_tags")', function() {
      // uncomment below and update the code to test the property tracesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property unknownIngredientsN (base name: "unknown_ingredients_n")', function() {
      // uncomment below and update the code to test the property unknownIngredientsN
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property noNutritionData (base name: "no_nutrition_data")', function() {
      // uncomment below and update the code to test the property noNutritionData
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionDataPer (base name: "nutrition_data_per")', function() {
      // uncomment below and update the code to test the property nutritionDataPer
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionDataPreparedPer (base name: "nutrition_data_prepared_per")', function() {
      // uncomment below and update the code to test the property nutritionDataPreparedPer
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutriments (base name: "nutriments")', function() {
      // uncomment below and update the code to test the property nutriments
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutriscoreData (base name: "nutriscore_data")', function() {
      // uncomment below and update the code to test the property nutriscoreData
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutriscoreGrade (base name: "nutriscore_grade")', function() {
      // uncomment below and update the code to test the property nutriscoreGrade
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutriscoreScore (base name: "nutriscore_score")', function() {
      // uncomment below and update the code to test the property nutriscoreScore
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutriscoreScoreOpposite (base name: "nutriscore_score_opposite")', function() {
      // uncomment below and update the code to test the property nutriscoreScoreOpposite
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionGradeFr (base name: "nutrition_grade_fr")', function() {
      // uncomment below and update the code to test the property nutritionGradeFr
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionGrades (base name: "nutrition_grades")', function() {
      // uncomment below and update the code to test the property nutritionGrades
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionGradesTags (base name: "nutrition_grades_tags")', function() {
      // uncomment below and update the code to test the property nutritionGradesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionScoreBeverage (base name: "nutrition_score_beverage")', function() {
      // uncomment below and update the code to test the property nutritionScoreBeverage
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionScoreWarningFruitsVegetablesNutsEstimateFromIngredients (base name: "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients")', function() {
      // uncomment below and update the code to test the property nutritionScoreWarningFruitsVegetablesNutsEstimateFromIngredients
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionScoreWarningFruitsVegetablesNutsEstimateFromIngredientsValue (base name: "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value")', function() {
      // uncomment below and update the code to test the property nutritionScoreWarningFruitsVegetablesNutsEstimateFromIngredientsValue
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nutritionScoreWarningNoFiber (base name: "nutrition_score_warning_no_fiber")', function() {
      // uncomment below and update the code to test the property nutritionScoreWarningNoFiber
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property otherNutritionalSubstancesTags (base name: "other_nutritional_substances_tags")', function() {
      // uncomment below and update the code to test the property otherNutritionalSubstancesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property unknownNutrientsTags (base name: "unknown_nutrients_tags")', function() {
      // uncomment below and update the code to test the property unknownNutrientsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property vitaminsTags (base name: "vitamins_tags")', function() {
      // uncomment below and update the code to test the property vitaminsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property dataQualityBugsTags (base name: "data_quality_bugs_tags")', function() {
      // uncomment below and update the code to test the property dataQualityBugsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property dataQualityErrorsTags (base name: "data_quality_errors_tags")', function() {
      // uncomment below and update the code to test the property dataQualityErrorsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property dataQualityInfoTags (base name: "data_quality_info_tags")', function() {
      // uncomment below and update the code to test the property dataQualityInfoTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property dataQualityTags (base name: "data_quality_tags")', function() {
      // uncomment below and update the code to test the property dataQualityTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property dataQualityWarningsTags (base name: "data_quality_warnings_tags")', function() {
      // uncomment below and update the code to test the property dataQualityWarningsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property dataSources (base name: "data_sources")', function() {
      // uncomment below and update the code to test the property dataSources
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property dataSourcesTags (base name: "data_sources_tags")', function() {
      // uncomment below and update the code to test the property dataSourcesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastCheckDatesTags (base name: "last_check_dates_tags")', function() {
      // uncomment below and update the code to test the property lastCheckDatesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastCheckedT (base name: "last_checked_t")', function() {
      // uncomment below and update the code to test the property lastCheckedT
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastChecker (base name: "last_checker")', function() {
      // uncomment below and update the code to test the property lastChecker
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property states (base name: "states")', function() {
      // uncomment below and update the code to test the property states
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property statesHierarchy (base name: "states_hierarchy")', function() {
      // uncomment below and update the code to test the property statesHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property statesTags (base name: "states_tags")', function() {
      // uncomment below and update the code to test the property statesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property miscTags (base name: "misc_tags")', function() {
      // uncomment below and update the code to test the property miscTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property additivesOriginalTags (base name: "additives_original_tags")', function() {
      // uncomment below and update the code to test the property additivesOriginalTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property additivesPrevOriginalTags (base name: "additives_prev_original_tags")', function() {
      // uncomment below and update the code to test the property additivesPrevOriginalTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property addedCountriesTags (base name: "added_countries_tags")', function() {
      // uncomment below and update the code to test the property addedCountriesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property allergensFromIngredients (base name: "allergens_from_ingredients")', function() {
      // uncomment below and update the code to test the property allergensFromIngredients
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property allergensFromUser (base name: "allergens_from_user")', function() {
      // uncomment below and update the code to test the property allergensFromUser
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property aminoAcidsPrevTags (base name: "amino_acids_prev_tags")', function() {
      // uncomment below and update the code to test the property aminoAcidsPrevTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property aminoAcidsTags (base name: "amino_acids_tags")', function() {
      // uncomment below and update the code to test the property aminoAcidsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property carbonFootprintPercentOfKnownIngredients (base name: "carbon_footprint_percent_of_known_ingredients")', function() {
      // uncomment below and update the code to test the property carbonFootprintPercentOfKnownIngredients
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property categoriesProperties (base name: "categories_properties")', function() {
      // uncomment below and update the code to test the property categoriesProperties
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property categoriesPropertiesTags (base name: "categories_properties_tags")', function() {
      // uncomment below and update the code to test the property categoriesPropertiesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property categoryProperties (base name: "category_properties")', function() {
      // uncomment below and update the code to test the property categoryProperties
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ciqualFoodNameTags (base name: "ciqual_food_name_tags")', function() {
      // uncomment below and update the code to test the property ciqualFoodNameTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property comparedToCategory (base name: "compared_to_category")', function() {
      // uncomment below and update the code to test the property comparedToCategory
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property conservationConditions (base name: "conservation_conditions")', function() {
      // uncomment below and update the code to test the property conservationConditions
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property customerService (base name: "customer_service")', function() {
      // uncomment below and update the code to test the property customerService
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "expiration_date")', function() {
      // uncomment below and update the code to test the property expirationDate
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property mainCountriesTags (base name: "main_countries_tags")', function() {
      // uncomment below and update the code to test the property mainCountriesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property mineralsPrevTags (base name: "minerals_prev_tags")', function() {
      // uncomment below and update the code to test the property mineralsPrevTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property mineralsTags (base name: "minerals_tags")', function() {
      // uncomment below and update the code to test the property mineralsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ownerFields (base name: "owner_fields")', function() {
      // uncomment below and update the code to test the property ownerFields
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property novaGroupsMarkers (base name: "nova_groups_markers")', function() {
      // uncomment below and update the code to test the property novaGroupsMarkers
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property nucleotidesTags (base name: "nucleotides_tags")', function() {
      // uncomment below and update the code to test the property nucleotidesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property purchasePlaces (base name: "purchase_places")', function() {
      // uncomment below and update the code to test the property purchasePlaces
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property purchasePlacesTags (base name: "purchase_places_tags")', function() {
      // uncomment below and update the code to test the property purchasePlacesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property stores (base name: "stores")', function() {
      // uncomment below and update the code to test the property stores
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property storesTags (base name: "stores_tags")', function() {
      // uncomment below and update the code to test the property storesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property tracesFromIngredients (base name: "traces_from_ingredients")', function() {
      // uncomment below and update the code to test the property tracesFromIngredients
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property tracesFromUser (base name: "traces_from_user")', function() {
      // uncomment below and update the code to test the property tracesFromUser
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property createdT (base name: "created_t")', function() {
      // uncomment below and update the code to test the property createdT
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property creator (base name: "creator")', function() {
      // uncomment below and update the code to test the property creator
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property editorsTags (base name: "editors_tags")', function() {
      // uncomment below and update the code to test the property editorsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property informersTags (base name: "informers_tags")', function() {
      // uncomment below and update the code to test the property informersTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property interfaceVersionCreated (base name: "interface_version_created")', function() {
      // uncomment below and update the code to test the property interfaceVersionCreated
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property interfaceVersionModified (base name: "interface_version_modified")', function() {
      // uncomment below and update the code to test the property interfaceVersionModified
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property languages (base name: "languages")', function() {
      // uncomment below and update the code to test the property languages
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property languagesCodes (base name: "languages_codes")', function() {
      // uncomment below and update the code to test the property languagesCodes
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property languagesHierarchy (base name: "languages_hierarchy")', function() {
      // uncomment below and update the code to test the property languagesHierarchy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property languagesTags (base name: "languages_tags")', function() {
      // uncomment below and update the code to test the property languagesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastEditDatesTags (base name: "last_edit_dates_tags")', function() {
      // uncomment below and update the code to test the property lastEditDatesTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastEditor (base name: "last_editor")', function() {
      // uncomment below and update the code to test the property lastEditor
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedBy (base name: "last_modified_by")', function() {
      // uncomment below and update the code to test the property lastModifiedBy
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedT (base name: "last_modified_t")', function() {
      // uncomment below and update the code to test the property lastModifiedT
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property ownersTags (base name: "owners_tags")', function() {
      // uncomment below and update the code to test the property ownersTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property photographersTags (base name: "photographers_tags")', function() {
      // uncomment below and update the code to test the property photographersTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property rev (base name: "rev")', function() {
      // uncomment below and update the code to test the property rev
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property sources (base name: "sources")', function() {
      // uncomment below and update the code to test the property sources
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property sourcesFields (base name: "sources_fields")', function() {
      // uncomment below and update the code to test the property sourcesFields
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property teams (base name: "teams")', function() {
      // uncomment below and update the code to test the property teams
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property teamsTags (base name: "teams_tags")', function() {
      // uncomment below and update the code to test the property teamsTags
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property updateKey (base name: "update_key")', function() {
      // uncomment below and update the code to test the property updateKey
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property knowledgePanels (base name: "knowledge_panels")', function() {
      // uncomment below and update the code to test the property knowledgePanels
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

    it('should have the property attributeGroups (base name: "attribute_groups")', function() {
      // uncomment below and update the code to test the property attributeGroups
      var instance = new OpenFoodFactsOpenApi.ProductBase();
      //expect(instance).to.be();
    });

  });

}));
