/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: reuse@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductEcoscoreDataAgribalyse', function() {
    it('should create an instance of ProductEcoscoreDataAgribalyse', function() {
      // uncomment below and update the code to test ProductEcoscoreDataAgribalyse
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be.a(OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse);
    });

    it('should have the property agribalyse_food_code (base name: "agribalyse_food_code")', function() {
      // uncomment below and update the code to test the property agribalyse_food_code
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property co2_agriculture (base name: "co2_agriculture")', function() {
      // uncomment below and update the code to test the property co2_agriculture
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property co2_consumption (base name: "co2_consumption")', function() {
      // uncomment below and update the code to test the property co2_consumption
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property co2_distribution (base name: "co2_distribution")', function() {
      // uncomment below and update the code to test the property co2_distribution
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property co2_packaging (base name: "co2_packaging")', function() {
      // uncomment below and update the code to test the property co2_packaging
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property co2_processing (base name: "co2_processing")', function() {
      // uncomment below and update the code to test the property co2_processing
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property co2_total (base name: "co2_total")', function() {
      // uncomment below and update the code to test the property co2_total
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property co2_transportation (base name: "co2_transportation")', function() {
      // uncomment below and update the code to test the property co2_transportation
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property dqr (base name: "dqr")', function() {
      // uncomment below and update the code to test the property dqr
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property ef_agriculture (base name: "ef_agriculture")', function() {
      // uncomment below and update the code to test the property ef_agriculture
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property ef_consumption (base name: "ef_consumption")', function() {
      // uncomment below and update the code to test the property ef_consumption
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property ef_distribution (base name: "ef_distribution")', function() {
      // uncomment below and update the code to test the property ef_distribution
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property ef_packaging (base name: "ef_packaging")', function() {
      // uncomment below and update the code to test the property ef_packaging
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property ef_processing (base name: "ef_processing")', function() {
      // uncomment below and update the code to test the property ef_processing
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property ef_total (base name: "ef_total")', function() {
      // uncomment below and update the code to test the property ef_total
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property ef_transportation (base name: "ef_transportation")', function() {
      // uncomment below and update the code to test the property ef_transportation
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property is_beverage (base name: "is_beverage")', function() {
      // uncomment below and update the code to test the property is_beverage
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property name_en (base name: "name_en")', function() {
      // uncomment below and update the code to test the property name_en
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property score (base name: "score")', function() {
      // uncomment below and update the code to test the property score
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new OpenFoodFactsOpenApi.ProductEcoscoreDataAgribalyse();
      //expect(instance).to.be();
    });

  });

}));
