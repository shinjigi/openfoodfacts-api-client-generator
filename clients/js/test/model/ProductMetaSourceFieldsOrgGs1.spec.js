/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenFoodFactsOpenApi);
  }
}(this, function(expect, OpenFoodFactsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductMetaSourceFieldsOrgGs1', function() {
    it('should create an instance of ProductMetaSourceFieldsOrgGs1', function() {
      // uncomment below and update the code to test ProductMetaSourceFieldsOrgGs1
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      expect(instance).to.be.a(OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1);
    });

    it('should have the property gln (base name: "gln")', function() {
      // uncomment below and update the code to test the property gln
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      //expect(instance).to.be();
    });

    it('should have the property gpcCategoryCode (base name: "gpcCategoryCode")', function() {
      // uncomment below and update the code to test the property gpcCategoryCode
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      //expect(instance).to.be();
    });

    it('should have the property gpcCategoryName (base name: "gpcCategoryName")', function() {
      // uncomment below and update the code to test the property gpcCategoryName
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      //expect(instance).to.be();
    });

    it('should have the property isAllergenRelevantDataProvided (base name: "isAllergenRelevantDataProvided")', function() {
      // uncomment below and update the code to test the property isAllergenRelevantDataProvided
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      //expect(instance).to.be();
    });

    it('should have the property lastChangeDateTime (base name: "lastChangeDateTime")', function() {
      // uncomment below and update the code to test the property lastChangeDateTime
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      //expect(instance).to.be();
    });

    it('should have the property partyName (base name: "partyName")', function() {
      // uncomment below and update the code to test the property partyName
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      //expect(instance).to.be();
    });

    it('should have the property productionVariantDescription (base name: "productionVariantDescription")', function() {
      // uncomment below and update the code to test the property productionVariantDescription
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      //expect(instance).to.be();
    });

    it('should have the property publicationDateTime (base name: "publicationDateTime")', function() {
      // uncomment below and update the code to test the property publicationDateTime
      var instance = new OpenFoodFactsOpenApi.ProductMetaSourceFieldsOrgGs1();
      //expect(instance).to.be();
    });

  });

}));
