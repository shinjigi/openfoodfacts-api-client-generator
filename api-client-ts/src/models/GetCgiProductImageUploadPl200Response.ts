/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetCgiProductImageUploadPl200ResponseFilesInner } from './GetCgiProductImageUploadPl200ResponseFilesInner';
import {
    GetCgiProductImageUploadPl200ResponseFilesInnerFromJSON,
    GetCgiProductImageUploadPl200ResponseFilesInnerFromJSONTyped,
    GetCgiProductImageUploadPl200ResponseFilesInnerToJSON,
} from './GetCgiProductImageUploadPl200ResponseFilesInner';
import type { GetCgiProductImageUploadPl200ResponseImage } from './GetCgiProductImageUploadPl200ResponseImage';
import {
    GetCgiProductImageUploadPl200ResponseImageFromJSON,
    GetCgiProductImageUploadPl200ResponseImageFromJSONTyped,
    GetCgiProductImageUploadPl200ResponseImageToJSON,
} from './GetCgiProductImageUploadPl200ResponseImage';

/**
 * 
 * @export
 * @interface GetCgiProductImageUploadPl200Response
 */
export interface GetCgiProductImageUploadPl200Response {
    /**
     * 
     * @type {Array<GetCgiProductImageUploadPl200ResponseFilesInner>}
     * @memberof GetCgiProductImageUploadPl200Response
     */
    files?: Array<GetCgiProductImageUploadPl200ResponseFilesInner>;
    /**
     * 
     * @type {GetCgiProductImageUploadPl200ResponseImage}
     * @memberof GetCgiProductImageUploadPl200Response
     */
    image?: GetCgiProductImageUploadPl200ResponseImage;
    /**
     * 
     * @type {number}
     * @memberof GetCgiProductImageUploadPl200Response
     */
    imgid?: number;
    /**
     * 
     * @type {string}
     * @memberof GetCgiProductImageUploadPl200Response
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCgiProductImageUploadPl200Response
     */
    imagefield?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCgiProductImageUploadPl200Response
     */
    code?: string;
}

/**
 * Check if a given object implements the GetCgiProductImageUploadPl200Response interface.
 */
export function instanceOfGetCgiProductImageUploadPl200Response(value: object): value is GetCgiProductImageUploadPl200Response {
    return true;
}

export function GetCgiProductImageUploadPl200ResponseFromJSON(json: any): GetCgiProductImageUploadPl200Response {
    return GetCgiProductImageUploadPl200ResponseFromJSONTyped(json, false);
}

export function GetCgiProductImageUploadPl200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCgiProductImageUploadPl200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(GetCgiProductImageUploadPl200ResponseFilesInnerFromJSON)),
        'image': json['image'] == null ? undefined : GetCgiProductImageUploadPl200ResponseImageFromJSON(json['image']),
        'imgid': json['imgid'] == null ? undefined : json['imgid'],
        'status': json['status'] == null ? undefined : json['status'],
        'imagefield': json['imagefield'] == null ? undefined : json['imagefield'],
        'code': json['code'] == null ? undefined : json['code'],
    };
}

export function GetCgiProductImageUploadPl200ResponseToJSON(value?: GetCgiProductImageUploadPl200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(GetCgiProductImageUploadPl200ResponseFilesInnerToJSON)),
        'image': GetCgiProductImageUploadPl200ResponseImageToJSON(value['image']),
        'imgid': value['imgid'],
        'status': value['status'],
        'imagefield': value['imagefield'],
        'code': value['code'],
    };
}

