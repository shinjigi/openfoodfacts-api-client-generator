/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Nutrient
 */
export interface Nutrient {
    /**
     * id of the nutrient
     * @type {string}
     * @memberof Nutrient
     */
    id?: string;
    /**
     * Name of the nutrient in the requested language
     * @type {string}
     * @memberof Nutrient
     */
    name?: string;
    /**
     * Indicates if the nutrient is always shown on the nutrition facts table
     * @type {boolean}
     * @memberof Nutrient
     */
    important?: boolean;
    /**
     * Indicates if the nutrient should be shown in the nutrition facts edit form
     * @type {boolean}
     * @memberof Nutrient
     */
    displayInEditForm?: boolean;
    /**
     * Default unit of the nutrient
     * @type {string}
     * @memberof Nutrient
     */
    unit?: NutrientUnitEnum;
    /**
     * 
     * @type {Array<Nutrient>}
     * @memberof Nutrient
     */
    nutrients?: Array<Nutrient>;
}


/**
 * @export
 */
export const NutrientUnitEnum = {
    G: 'g',
    Mg: 'mg',
    G2: 'Î¼g',
    Cl: 'cl',
    Ml: 'ml',
    Dv: 'dv',
    Vol: '% vol',
    Percent: '%'
} as const;
export type NutrientUnitEnum = typeof NutrientUnitEnum[keyof typeof NutrientUnitEnum];


/**
 * Check if a given object implements the Nutrient interface.
 */
export function instanceOfNutrient(value: object): value is Nutrient {
    return true;
}

export function NutrientFromJSON(json: any): Nutrient {
    return NutrientFromJSONTyped(json, false);
}

export function NutrientFromJSONTyped(json: any, ignoreDiscriminator: boolean): Nutrient {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'important': json['important'] == null ? undefined : json['important'],
        'displayInEditForm': json['display_in_edit_form'] == null ? undefined : json['display_in_edit_form'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'nutrients': json['nutrients'] == null ? undefined : ((json['nutrients'] as Array<any>).map(NutrientFromJSON)),
    };
}

export function NutrientToJSON(value?: Nutrient | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'important': value['important'],
        'display_in_edit_form': value['displayInEditForm'],
        'unit': value['unit'],
        'nutrients': value['nutrients'] == null ? undefined : ((value['nutrients'] as Array<any>).map(NutrientToJSON)),
    };
}

