/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdjustmentsPackagingItem } from './AdjustmentsPackagingItem';
import {
    AdjustmentsPackagingItemFromJSON,
    AdjustmentsPackagingItemFromJSONTyped,
    AdjustmentsPackagingItemToJSON,
} from './AdjustmentsPackagingItem';

/**
 * 
 * @export
 * @interface EcoscoreDataAdjustmentsPackaging
 */
export interface EcoscoreDataAdjustmentsPackaging {
    /**
     * 
     * @type {number}
     * @memberof EcoscoreDataAdjustmentsPackaging
     */
    nonRecyclableAndNonBiodegradableMaterials?: number;
    /**
     * 
     * @type {Array<AdjustmentsPackagingItem>}
     * @memberof EcoscoreDataAdjustmentsPackaging
     */
    packagings?: Array<AdjustmentsPackagingItem>;
    /**
     * 
     * @type {number}
     * @memberof EcoscoreDataAdjustmentsPackaging
     */
    score?: number;
    /**
     * 
     * @type {number}
     * @memberof EcoscoreDataAdjustmentsPackaging
     */
    value?: number;
    /**
     * 
     * @type {string}
     * @memberof EcoscoreDataAdjustmentsPackaging
     */
    warning?: string;
}

/**
 * Check if a given object implements the EcoscoreDataAdjustmentsPackaging interface.
 */
export function instanceOfEcoscoreDataAdjustmentsPackaging(value: object): value is EcoscoreDataAdjustmentsPackaging {
    return true;
}

export function EcoscoreDataAdjustmentsPackagingFromJSON(json: any): EcoscoreDataAdjustmentsPackaging {
    return EcoscoreDataAdjustmentsPackagingFromJSONTyped(json, false);
}

export function EcoscoreDataAdjustmentsPackagingFromJSONTyped(json: any, ignoreDiscriminator: boolean): EcoscoreDataAdjustmentsPackaging {
    if (json == null) {
        return json;
    }
    return {
        
        'nonRecyclableAndNonBiodegradableMaterials': json['non_recyclable_and_non_biodegradable_materials'] == null ? undefined : json['non_recyclable_and_non_biodegradable_materials'],
        'packagings': json['packagings'] == null ? undefined : ((json['packagings'] as Array<any>).map(AdjustmentsPackagingItemFromJSON)),
        'score': json['score'] == null ? undefined : json['score'],
        'value': json['value'] == null ? undefined : json['value'],
        'warning': json['warning'] == null ? undefined : json['warning'],
    };
}

export function EcoscoreDataAdjustmentsPackagingToJSON(value?: EcoscoreDataAdjustmentsPackaging | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'non_recyclable_and_non_biodegradable_materials': value['nonRecyclableAndNonBiodegradableMaterials'],
        'packagings': value['packagings'] == null ? undefined : ((value['packagings'] as Array<any>).map(AdjustmentsPackagingItemToJSON)),
        'score': value['score'],
        'value': value['value'],
        'warning': value['warning'],
    };
}

