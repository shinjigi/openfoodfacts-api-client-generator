/* tslint:disable */
/* eslint-disable */
/**
 * Open Food Facts Open API
 * As a developer, the Open Food Facts API allows you to get information and contribute to the products database. You can create great apps to help people make better food choices and also provide data to enhance the database. 
 *
 * The version of the OpenAPI document: 2
 * Contact: contact@openfoodfacts.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetAttributeGroups200ResponseInnerAttributesInner
 */
export interface GetAttributeGroups200ResponseInnerAttributesInner {
    /**
     * unique id of the attribute
     * @type {string}
     * @memberof GetAttributeGroups200ResponseInnerAttributesInner
     */
    id?: string;
    /**
     * Name of the attribute
     * @type {string}
     * @memberof GetAttributeGroups200ResponseInnerAttributesInner
     */
    name?: string;
    /**
     * url of icon to display next to the settings for this attribute
     * @type {string}
     * @memberof GetAttributeGroups200ResponseInnerAttributesInner
     */
    iconUrl?: string;
    /**
     * a description of the attribute to display to users
     * @type {string}
     * @memberof GetAttributeGroups200ResponseInnerAttributesInner
     */
    settingName?: string;
    /**
     * a complementary note on the attribute
     * @type {string}
     * @memberof GetAttributeGroups200ResponseInnerAttributesInner
     */
    settingNote?: string;
    /**
     * Indicates the default setting for this attribute
     * @type {string}
     * @memberof GetAttributeGroups200ResponseInnerAttributesInner
     */
    _default?: GetAttributeGroups200ResponseInnerAttributesInnerDefaultEnum;
    /**
     * Linked knowledge panel (optional)
     * @type {string}
     * @memberof GetAttributeGroups200ResponseInnerAttributesInner
     */
    panelId?: string;
}


/**
 * @export
 */
export const GetAttributeGroups200ResponseInnerAttributesInnerDefaultEnum = {
    Mandatory: 'mandatory',
    VeryImportant: 'very_important',
    Important: 'important',
    NotImportant: 'not_important'
} as const;
export type GetAttributeGroups200ResponseInnerAttributesInnerDefaultEnum = typeof GetAttributeGroups200ResponseInnerAttributesInnerDefaultEnum[keyof typeof GetAttributeGroups200ResponseInnerAttributesInnerDefaultEnum];


/**
 * Check if a given object implements the GetAttributeGroups200ResponseInnerAttributesInner interface.
 */
export function instanceOfGetAttributeGroups200ResponseInnerAttributesInner(value: object): value is GetAttributeGroups200ResponseInnerAttributesInner {
    return true;
}

export function GetAttributeGroups200ResponseInnerAttributesInnerFromJSON(json: any): GetAttributeGroups200ResponseInnerAttributesInner {
    return GetAttributeGroups200ResponseInnerAttributesInnerFromJSONTyped(json, false);
}

export function GetAttributeGroups200ResponseInnerAttributesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAttributeGroups200ResponseInnerAttributesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'iconUrl': json['icon_url'] == null ? undefined : json['icon_url'],
        'settingName': json['setting_name'] == null ? undefined : json['setting_name'],
        'settingNote': json['setting_note'] == null ? undefined : json['setting_note'],
        '_default': json['default'] == null ? undefined : json['default'],
        'panelId': json['panel_id'] == null ? undefined : json['panel_id'],
    };
}

export function GetAttributeGroups200ResponseInnerAttributesInnerToJSON(value?: GetAttributeGroups200ResponseInnerAttributesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'icon_url': value['iconUrl'],
        'setting_name': value['settingName'],
        'setting_note': value['settingNote'],
        'default': value['_default'],
        'panel_id': value['panelId'],
    };
}

